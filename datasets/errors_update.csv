14,Compiler Removal of Code to Clear Buffers,AppChecker,90.04233458061694,6,23568,2018-03-1,
22,Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),AppChecker,38.939013428200376,8,27706,2005-04-1,
79,Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),AppChecker,71.39899830648027,3,55460,2005-11-0,
89,Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'),AppChecker,63.30541101012744,6,95292,2010-08-2,
94,Improper Control of Generation of Code ('Code Injection'),AppChecker,86.1551585721474,1,12267,2010-01-1,
95,Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection'),AppChecker,49.93504662257829,9,45574,2000-05-2,
103,Struts: Incomplete validate() Method Definition,AppChecker,25.7077759174561,5,33264,2012-10-0,
113,Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting'),AppChecker,97.48270360829437,2,77156,2003-10-1,
114,Process Control,AppChecker,80.44017927931955,1,34455,2002-03-2,
117,Improper Output Neutralization for Logs,AppChecker,38.575638866772685,7,63412,2005-04-0,
120,Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'),AppChecker,95.62213550078799,7,5613,2003-03-3,
121,Stack-based Buffer Overflow,AppChecker,23.67351889861321,3,91690,2005-04-2,
125,Out-of-bounds Read,AppChecker,61.669725476940215,10,48416,2007-12-0,
134,Uncontrolled Format String,AppChecker,6.762274275153468,3,51660,2009-01-0,
135,Incorrect Calculation of Multi-Byte String Length,AppChecker,41.921982891918255,3,33309,2000-01-2,
170,Improper Null Termination,AppChecker,35.80962305189787,2,89094,2002-08-2,
194,Unexpected Sign Extension,AppChecker,76.16738605133231,4,55853,2011-05-1,
196,Unsigned to Signed Conversion Error,AppChecker,6.962499856568371,6,40304,2012-11-2,
197,Numeric Truncation Error,AppChecker,2.6772464579864486,8,30148,2000-09-2,
209,Information Exposure Through an Error Message,AppChecker,18.74673621365912,3,56224,2014-07-0,
213,Intentional Information Exposure,AppChecker,29.112580083230455,7,85931,2017-06-2,
215,Information Exposure Through Debug Information,AppChecker,71.86791926203372,8,50333,2015-10-1,
242,Use of Inherently Dangerous Function,AppChecker,82.60357804231998,1,45529,2010-07-0,
245,J2EE Bad Practices: Direct Management of Connections,AppChecker,39.59107689027408,1,49982,2004-03-2,
252,Unchecked Return Value,AppChecker,20.337766752195606,10,3086,2008-03-0,
253,Incorrect Check of Function Return Value,AppChecker,34.10697289393387,9,2287,2004-09-0,
259,Use of Hard-coded Password,AppChecker,78.12300298005417,3,89214,2005-11-1,
275,Permission Issues,AppChecker,40.836080498292894,1,51809,2017-10-0,
312,Cleartext Storage of Sensitive Information,AppChecker,49.10276019869908,6,38547,2011-02-2,
327,Use of a Broken or Risky Cryptographic Algorithm,AppChecker,37.65731850787297,6,98220,2019-05-2,
337,Predictable Seed in PRNG,AppChecker,20.802416293546887,2,13119,2003-05-1,
347,Improper Verification of Cryptographic Signature,AppChecker,56.409649403176196,10,8871,2007-08-2,
362,Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition'),AppChecker,78.0214155319698,3,69256,2000-11-2,
369,Divide By Zero,AppChecker,72.13019777305263,9,14957,2016-05-0,
375,Returning a Mutable Object to an Untrusted Caller,AppChecker,11.300400505855734,6,37527,2005-12-1,
388,Error Handling,AppChecker,32.84320006411902,9,67833,2000-02-0,
390,Detection of Error Condition Without Action,AppChecker,82.1393207674061,4,34490,2005-02-2,
391,Unchecked Error Condition,AppChecker,83.83660999765941,7,68436,2008-02-0,
395,Use of NullPointerException Catch to Detect NULL Pointer Dereference,AppChecker,33.87567128241311,4,97739,2016-08-1,
397,Declaration of Throws for Generic Exception,AppChecker,7.729223656441164,5,65075,2019-01-0,
398,Indicator of Poor Code Quality,AppChecker,80.35983271557623,10,58563,2017-10-1,
401,Improper Release of Memory Before Removing Last Reference ('Memory Leak'),AppChecker,75.98791179285398,6,73304,2012-08-1,
404,Improper Resource Shutdown or Release,AppChecker,98.55525250346003,3,23463,2005-04-0,
415,Double Free,AppChecker,58.64563200278392,3,93506,2016-03-2,
428,Unquoted Search Path or Element,AppChecker,50.846584186943275,2,80509,2005-09-3,
467,Use of sizeof() on a Pointer Type,AppChecker,97.72180209481076,9,2035,2012-03-2,
468,Incorrect Pointer Scaling,AppChecker,80.15713892948871,1,97076,2009-10-0,
476,NULL Pointer Dereference,AppChecker,43.70741005176978,9,25084,2018-09-2,
477,Use of Obsolete Functions,AppChecker,22.126903327523195,3,90976,2012-08-0,
478,Missing Default Case in Switch Statement,AppChecker,2.5839400679840474,8,22836,2012-11-0,
480,Use of Incorrect Operator,AppChecker,76.34975250371019,6,70483,2015-05-0,
481,Assigning instead of Comparing,AppChecker,70.64809451946427,8,74078,2010-10-1,
482,Comparing instead of Assigning,AppChecker,89.14832534612654,10,23531,2009-02-1,
484,Omitted Break Statement in Switch,AppChecker,65.14234587908308,7,6031,2011-06-0,
486,Comparison of Classes by Name,AppChecker,85.79847023384532,6,92525,2015-10-2,
491,Public cloneable() Method Without Final ('Object Hijack'),AppChecker,63.71325921580342,3,9653,2013-12-2,
497,Exposure of System Data to an Unauthorized Control Sphere,AppChecker,69.78457768755153,7,67923,2004-03-1,
500,Public Static Field Not Marked Final,AppChecker,74.60620466997237,9,40491,2006-01-2,
506,Embedded Malicious Code,AppChecker,62.448105279440306,5,60683,2011-02-2,
511,Logic/Time Bomb,AppChecker,93.76157219361289,2,6636,2005-12-1,
526,Information Exposure Through Environmental Variables,AppChecker,65.16163412285769,3,17307,2009-07-1,
545,Use of Dynamic Class Loading,AppChecker,94.85842945075306,5,75494,2013-10-0,
557,Concurrency Issues,AppChecker,16.293988884611498,8,87009,2005-03-2,
561,Dead Code,AppChecker,82.67967295190225,6,5160,2017-09-1,
562,Return of Stack Variable Address,AppChecker,97.64881286025934,9,75909,2014-11-0,
568,finalize() Method Without super.finalize(),AppChecker,12.915278825558364,3,38929,2017-09-1,
569,Expression Issues,AppChecker,73.22832315832326,6,95506,2018-11-2,
570,Expression is Always False,AppChecker,51.27129331443964,3,71922,2004-09-0,
571,Expression is Always True,AppChecker,27.589726003367076,9,36882,2017-04-1,
580,clone() method does not call super.clone(),AppChecker,27.612669466234998,1,16198,2001-10-3,
581,Object Model Violation: Just One of Equals and Hashcode Defined,AppChecker,14.881101582861012,2,99137,2008-08-2,
582,"Array Declared Public, Final, and Static",AppChecker,2.5538613163686885,3,96285,2009-04-2,
583,finalize() Method Declared Public,AppChecker,33.421794291424575,1,49558,2011-01-3,
584,Return Inside Finally Block,AppChecker,86.62760470557242,4,13763,2002-03-0,
585,Empty Synchronized Block,AppChecker,3.158064591353793,10,15216,2017-07-2,
586,Explicit Call to Finalize(),AppChecker,14.298904687163393,7,45903,2015-05-1,
587,Assignment of a Fixed Address to a Pointer,AppChecker,34.83211088768778,4,16582,2018-12-2,
590,Free of Memory not on the Heap,AppChecker,89.14511038122225,8,47683,2006-04-1,
606,Unchecked Input for Loop Condition,AppChecker,20.967985546573388,9,85034,2007-06-1,
609,Double-Checked Locking,AppChecker,73.40926252682813,3,69837,2003-07-1,
617,Reachable Assertion,AppChecker,5.888726716553505,6,68538,2013-11-0,
628,Function Call with Incorrectly Specified Arguments,AppChecker,68.04749789097166,3,93357,2019-08-2,
648,Incorrect Use of Privileged APIs,AppChecker,71.19559577379819,1,62386,2016-04-0,
662,Improper Synchronization,AppChecker,72.52632628462479,6,83130,2010-08-3,
674,Uncontrolled Recursion,AppChecker,76.15109933196422,8,92840,2003-10-2,
682,Incorrect Calculation,AppChecker,67.99766908210644,9,11693,2002-06-2,
683,Function Call With Incorrect Order of Arguments,AppChecker,86.46256617096935,10,1783,2013-04-1,
691,Insufficient Control Flow Management,AppChecker,28.596223029401713,1,37609,2011-04-1,
697,Insufficient Comparison,AppChecker,95.90502875247947,1,95689,2004-09-3,
730,OWASP Top Ten 2004 Category A9 - Denial of Service,AppChecker,55.14361340614764,1,92787,2016-12-3,
759,Use of a One-Way Hash without a Salt,AppChecker,23.429848128811457,3,3234,2016-01-1,
770,Allocation of Resources Without Limits or Throttling,AppChecker,86.9321518115035,4,11201,2015-12-1,
780,Use of RSA Algorithm without OAEP,AppChecker,0.6844045291437006,8,25786,2016-08-1,
798,Use of Hard-coded Credentials,AppChecker,20.666635928057065,1,29848,2000-07-1,
806,Buffer Access Using Size of Source Buffer,AppChecker,56.37731732013035,5,60187,2007-05-2,
835,Loop with Unreachable Exit Condition ('Infinite Loop'),AppChecker,5.099951896893707,3,59431,2015-09-0,
858,CERT Java Secure Coding Section 13 - Serialization (SER),AppChecker,51.079262781049486,8,34541,2011-11-0,
961,SFP Secondary Cluster: Incorrect Exception Behavior,AppChecker,14.058400027713569,8,44328,2013-05-2,
,Sink Point,clang-tidy,35.04847193084002,10,89838,2010-12-2,
,Analyzer Statistics,clang-tidy,66.97617466746108,2,8624,2008-03-0,
788,Out-of-bound array access,clang-tidy,96.26712929989436,9,85204,2013-07-1,
788,Out-of-bound access,clang-tidy,22.684692898200552,8,10337,2018-11-2,
557,Call to blocking function in critical section,clang-tidy,28.22198503074379,7,96032,2006-04-2,
681,Assignment of a non-Boolean value,clang-tidy,87.59933618345167,4,78664,2013-07-1,
1006,API,clang-tidy,39.58002625516019,3,85943,2004-02-0,
788,Out-of-bound array access,clang-tidy,96.5591874853879,3,79931,2001-12-2,
476,Null pointer argument in call to byte string function,clang-tidy,0.5440048291179722,4,60233,2014-08-2,
398,Anti-pattern in the argument,clang-tidy,92.2037654380055,7,50252,2006-04-0,
398,Anti-pattern in the argument,clang-tidy,38.1718692091082,1,79574,2006-02-2,
465,Receiver in message expression is 'nil',clang-tidy,74.38048381462477,1,26221,2002-03-1,
824,Subscript access on an uninitialized object pointer,clang-tidy,61.46630174599582,8,22994,2008-04-1,
824,Property access on an uninitialized object pointer,clang-tidy,26.997056195132462,8,48949,2013-07-0,
824,Receiver in message expression is an uninitialized value,clang-tidy,33.21813632897482,5,81535,2010-02-2,
476,Called C++ object pointer is null,clang-tidy,65.09425181567529,2,39926,2017-12-2,
824,Called C++ object pointer is uninitialized,clang-tidy,96.22955501545407,7,23592,2012-07-2,
824,Uninitialized argument value,clang-tidy,58.82217432822754,2,12671,2001-11-2,
476,Called function pointer is null (null dereference),clang-tidy,12.364124663209285,4,50713,2001-12-3,
824,Called function pointer is an uninitialized pointer value,clang-tidy,46.53935506440094,4,99140,2019-08-0,
704,Cast region with wrong size.,clang-tidy,78.56957231729787,6,60087,2002-12-2,
704,Widening cast to struct type,clang-tidy,52.376646061286515,6,94058,2014-09-2,
704,Cast from non-struct type to struct type,clang-tidy,68.00830784864434,10,32089,2013-09-2,
399,Mistaken dealloc,clang-tidy,50.22111618977496,9,85178,2002-05-0,
401,Missing ivar release (leak),clang-tidy,88.58557223506124,9,30739,2013-07-2,
389,Incompatible instance method return type,clang-tidy,78.73927949041378,9,33180,2014-09-0,
242,Potential insecure implementation-specific behavior in call 'vfork',clang-tidy,64.18011681822958,8,80014,2009-12-2,
338,'random' is not a secure random number generator,clang-tidy,96.31093905010484,9,87273,2005-04-1,
120,Potential insecure memory buffer bounds restriction in call 'strcat',clang-tidy,66.55025864239136,2,2780,2006-05-2,
120,Potential insecure memory buffer bounds restriction in call 'strcpy',clang-tidy,18.705053149700724,5,58612,2015-07-1,
378,Insecure temporary file creation,clang-tidy,43.92583191153723,7,95644,2019-10-1,
378,Potential insecure temporary file in call 'mktemp',clang-tidy,73.57629502612842,5,77406,2005-05-2,
242,Potential buffer overflow in call to 'getpw',clang-tidy,63.5613228108194,9,74763,2015-05-3,
242,Potential buffer overflow in call to 'gets',clang-tidy,83.91345263194326,9,36274,2000-06-2,
477,Use of deprecated function in call to 'bzero()',clang-tidy,49.76707757539488,8,38220,2017-07-2,
477,Use of deprecated function in call to 'bcopy()',clang-tidy,75.81650061408143,9,13691,2018-05-2,
477,Use of deprecated function in call to 'bcmp()',clang-tidy,97.83479734389772,10,42132,2008-11-1,
467,Potential unintended use of sizeof() on pointer type,clang-tidy,0.9100976635034397,6,91956,2016-04-1,
243,Break out of jail,clang-tidy,27.331998300655926,5,99797,2013-07-3,
1041,Suspicious code clone,clang-tidy,27.02623621120175,8,73618,2012-12-1,
1041,Exact code clone,clang-tidy,83.3893671733331,10,3612,2016-05-1,
681,Conversion,clang-tidy,88.58215616863883,4,69342,2011-12-0,
1079,Destruction of a polymorphic object with no virtual destructor,clang-tidy,75.71879362201524,8,56624,2001-09-1,
824,Dereference of undefined pointer value,clang-tidy,90.35645437498991,7,97085,2011-03-3,
476,Dereference of null pointer,clang-tidy,63.83562124796431,2,13961,2017-11-1,
1006,Property access,clang-tidy,60.45787245537553,3,88559,2012-11-2,
136,Dynamic and static type mismatch,clang-tidy,38.9858192197699,7,96177,2017-10-1,
704,Generics,clang-tidy,98.74953523623418,2,93557,2010-08-1,
704,Enum cast out of range,clang-tidy,56.30664746297879,1,62418,2011-04-2,
,Checking analyzer assumptions,clang-tidy,57.80805045628845,2,9617,2017-07-0,
587,Use fixed address,clang-tidy,31.19363847126777,10,94914,2009-03-2,
398,GCD performance anti-pattern,clang-tidy,89.71226807345558,2,82921,2008-01-2,
502,Use of Untrusted Data,clang-tidy,6.470068923704375,9,10154,2005-08-2,
569,Identical expressions in conditional expression,clang-tidy,31.979552227163833,6,44653,2007-06-1,
569,Compare of identical expressions,clang-tidy,34.22408083392472,4,65427,2014-12-0,
1041,Identical branches,clang-tidy,29.20368170884752,2,63741,2008-12-2,
1041,Identical conditions,clang-tidy,78.36768156985195,4,54779,2000-11-0,
1041,Identical conditions,clang-tidy,92.22304268471328,6,80659,2009-06-2,
1041,Use of identical expressions,clang-tidy,12.739711922262732,9,98917,2002-08-2,
825,Iterator invalidated,clang-tidy,48.19731698873798,9,88213,2016-09-0,
465,Iterator out of range,clang-tidy,90.9868831179965,9,30419,2002-11-0,
459,Incomplete invalidation,clang-tidy,93.61454032623017,4,75662,2015-10-1,
459,Incomplete invalidation,clang-tidy,82.18243832681935,6,12,2007-04-1,
399,AST node allocates heap memory,clang-tidy,33.75141228807452,9,59993,2016-09-0,
398,Plural Misuse,clang-tidy,86.34763691157595,10,67968,2009-10-2,
398,Context Missing,clang-tidy,73.12933932665162,7,16681,2006-11-2,
398,Unlocalizable string,clang-tidy,65.14583019415348,9,11533,2005-07-0,
399,Improper use of SecKeychain API,clang-tidy,18.18389926509122,8,12374,2001-12-0,
1006,Improper use of 'dispatch_once',clang-tidy,22.290255036958406,6,85727,2000-05-1,
401,Memory leak,clang-tidy,25.65761826544787,8,43182,2013-08-1,
763,Bad free,clang-tidy,31.79295019753838,8,58613,2009-07-3,
399,Use of zero allocated,clang-tidy,80.45065992276838,6,26285,2016-02-0,
415,Double delete,clang-tidy,52.55146556952061,4,99521,2016-05-1,
415,Double free,clang-tidy,81.71586851289254,3,66806,2002-01-2,
416,Use-after-free,clang-tidy,35.044099515629334,1,85531,2012-12-2,
761,Offset free,clang-tidy,98.81869444073857,6,17444,2006-05-1,
763,Bad deallocator,clang-tidy,81.591700727989,2,20667,2010-08-3,
590,Free alloca(),clang-tidy,71.72088988148089,2,86970,2011-09-2,
763,Bad free,clang-tidy,23.227789500892538,7,38878,2016-11-1,
789,malloc() size overflow,clang-tidy,97.35067428914192,7,77917,2018-06-0,
131, dubious allocs arguments involving sizeof,clang-tidy,65.97452765252535,1,26434,2015-09-1,
200,"W^X check fails, Write Exec prot flags set",clang-tidy,25.16496116748502,6,46798,2001-06-2,
399,Use-after-move,clang-tidy,80.47017156774358,5,13454,2015-12-0,
1006,Use -drain instead of -release,clang-tidy,24.410674630882646,9,85065,2010-02-2,
476,CFErrorRef* null dereference,clang-tidy,86.20736478609444,2,44549,2017-10-0,
1006,Bad return type when passing CFErrorRef*,clang-tidy,1.1512861187984447,6,62366,2013-04-2,
1006,Bad return type when passing NSError**,clang-tidy,8.528712871545775,2,45472,2016-03-1,
476,Dereference of null pointer,clang-tidy,16.410517213440478,6,70428,2007-09-0,
476,Argument with 'nonnull' attribute passed null,clang-tidy,40.60586156997239,5,93583,2014-07-2,
476,Nullability,clang-tidy,46.245815136675574,7,40967,2004-12-2,
682,Suspicious number object conversion,clang-tidy,27.518448408183303,7,49195,2017-03-0,
704,OSObject C-Style Cast,clang-tidy,42.995685990472886,1,92843,2003-11-1,
662,Nil value used as mutex for @synchronized() (no synchronization will occur),clang-tidy,16.642631999053492,1,90940,2005-10-0,
662,Uninitialized value used as mutex for @synchronized,clang-tidy,20.41806960414555,8,71835,2013-02-0,
465,CFArray API,clang-tidy,98.36938307934491,8,79511,2015-03-1,
1006,Objective-C property misuse,clang-tidy,46.701121014571136,10,60978,2006-09-0,
399,[super dealloc] should not be called more than once,clang-tidy,98.3283743589486,3,73700,2016-02-0,
1164,Unused instance variable,clang-tidy,68.90438618404512,7,36698,2017-11-2,
188,Dangerous pointer arithmetic,clang-tidy,84.30761508674601,7,49200,2003-04-0,
465,Iteration of pointer-like elements,clang-tidy,71.72254397809871,3,18486,2013-07-0,
465,Sorting of pointer-like elements,clang-tidy,70.54888700489067,2,53592,2015-02-1,
469,Pointer subtraction,clang-tidy,47.91101316775579,5,7892,2012-06-1,
667,Use destroyed lock,clang-tidy,86.60686218366352,9,19337,2006-08-0,
667,Init invalid lock,clang-tidy,74.78894402237981,6,17997,2014-09-0,
667,Destroy invalid lock,clang-tidy,96.987684853127,2,24320,2008-01-2,
667,Lock order reversal,clang-tidy,85.32863040273483,4,57114,2001-10-2,
667,Double unlocking,clang-tidy,1.8187500140558255,5,67031,2004-03-0,
667,Double locking,clang-tidy,14.315854712262032,4,28749,2016-09-1,
466,Return of pointer value outside of expected range,clang-tidy,77.2423016489094,3,86732,2000-02-1,
465,Returning null reference,clang-tidy,6.621601596085913,1,49383,2010-11-0,
465,Garbage return value,clang-tidy,49.371979958743054,6,89641,2000-04-2,
399,Memory leak inside autorelease pool,clang-tidy,17.06951138161972,4,29319,2013-03-2,
910,Double fclose,clang-tidy,68.33785387469578,3,19982,2000-11-0,
775,Resource Leak,clang-tidy,24.847063449669438,4,32060,2019-07-0,
910,Double fclose,clang-tidy,17.605795503957623,8,24399,2015-12-0,
476,NULL stream pointer,clang-tidy,55.95450010873873,9,61115,2000-10-1,
628,Illegal whence argument,clang-tidy,32.637441548489306,6,54675,2009-01-2,
19,Tainted data,clang-tidy,20.54121846109758,5,17270,2009-06-2,
369,Division by zero,clang-tidy,54.28892004576517,5,3524,2011-10-0,
465,Branch condition evaluates to a garbage value,clang-tidy,3.0630963688150548,6,56538,2008-08-2,
824,uninitialized variable captured by block,clang-tidy,28.81852603906303,4,43435,2019-08-1,
465,Result of operation is garbage or undefined,clang-tidy,5.626977960989343,4,39377,2018-09-1,
824,Array subscript is undefined,clang-tidy,99.24637279117837,7,93004,2012-04-0,
561,Unreachable code,clang-tidy,72.35015095630722,6,11064,2009-05-2,
789,Dangerous variable-length array (VLA) declaration,clang-tidy,98.05471026575614,6,59047,2003-10-0,
401,Leaked va_list,clang-tidy,12.454159784146611,3,67515,2016-05-1,
824,Uninitialized va_list,clang-tidy,0.9547523392809065,10,50967,2016-12-2,
399,Dangerous construct in a vforked process,clang-tidy,29.029891211822868,4,11504,2012-05-0,
788,Out-of-bound array access,clang-tidy,21.14195447143199,5,54105,2003-09-2,
788,Out-of-bound access,clang-tidy,82.14556767170936,8,74213,2014-02-0,
557,Call to blocking function in critical section,clang-tidy,48.669661796818,7,87254,2000-02-0,
681,Assignment of a non-Boolean value,clang-tidy,57.78991996815647,3,83935,2009-11-1,
1006,API,clang-tidy,89.19510602085255,5,44645,2016-12-0,
788,Out-of-bound array access,clang-tidy,92.18334328547725,4,12113,2016-03-0,
398,Anti-pattern in the argument,clang-tidy,49.49723424229939,9,72924,2012-03-2,
398,Anti-pattern in the argument,clang-tidy,11.9159984105075,10,45332,2006-06-2,
465,Receiver in message expression is 'nil',clang-tidy,14.021917279624574,7,67244,2001-10-0,
824,Subscript access on an uninitialized object pointer,clang-tidy,58.72917865305695,9,68583,2001-02-0,
824,Property access on an uninitialized object pointer,clang-tidy,31.499370969732443,3,59797,2006-12-0,
824,Receiver in message expression is an uninitialized value,clang-tidy,75.45684107611321,4,89361,2005-02-0,
476,Called C++ object pointer is null,clang-tidy,67.01456521301739,5,65919,2001-03-2,
824,Called C++ object pointer is uninitialized,clang-tidy,81.7343936059696,2,21382,2007-06-1,
824,Uninitialized argument value,clang-tidy,65.69456047412712,1,77169,2016-01-0,
476,Called function pointer is null (null dereference),clang-tidy,69.74816163365358,3,97986,2017-08-0,
824,Called function pointer is an uninitialized pointer value,clang-tidy,74.9144101739012,6,270,2017-02-0,
704,Cast region with wrong size.,clang-tidy,28.614830265829916,1,11348,2006-04-1,
704,Widening cast to struct type,clang-tidy,54.25213991017844,2,1199,2004-08-1,
704,Cast from non-struct type to struct type,clang-tidy,84.134215933361,10,69530,2008-06-1,
399,Mistaken dealloc,clang-tidy,76.08652308153991,10,74552,2013-05-1,
401,Missing ivar release (leak),clang-tidy,43.377609287117366,9,4855,2005-07-2,
389,Incompatible instance method return type,clang-tidy,61.286928539048446,4,84629,2019-04-1,
242,Potential insecure implementation-specific behavior in call 'vfork',clang-tidy,23.895324411138684,2,31108,2006-07-1,
338,'random' is not a secure random number generator,clang-tidy,97.73801895920579,8,89006,2019-01-0,
120,Potential insecure memory buffer bounds restriction in call 'strcat',clang-tidy,89.77925959037408,1,90841,2002-11-0,
120,Potential insecure memory buffer bounds restriction in call 'strcpy',clang-tidy,56.420810614896766,9,52261,2009-10-2,
378,Insecure temporary file creation,clang-tidy,16.541125314080062,1,83668,2003-06-2,
378,Potential insecure temporary file in call 'mktemp',clang-tidy,14.533304926086178,4,45171,2010-11-0,
242,Potential buffer overflow in call to 'getpw',clang-tidy,48.79695110856169,9,68096,2018-09-0,
242,Potential buffer overflow in call to 'gets',clang-tidy,0.2254674060961248,7,25183,2017-01-2,
477,Use of deprecated function in call to 'bzero()',clang-tidy,49.93308441060861,1,2996,2007-02-1,
477,Use of deprecated function in call to 'bcopy()',clang-tidy,1.746070642338149,10,57426,2008-11-1,
477,Use of deprecated function in call to 'bcmp()',clang-tidy,11.621035668724133,3,83312,2000-03-1,
467,Potential unintended use of sizeof() on pointer type,clang-tidy,49.20596809326825,10,2654,2006-06-1,
243,Break out of jail,clang-tidy,54.176060398023154,9,9877,2010-08-2,
1041,Suspicious code clone,clang-tidy,31.274187812557653,5,15225,2016-04-1,
1041,Exact code clone,clang-tidy,74.15745170052065,10,24379,2019-03-2,
681,Conversion,clang-tidy,60.52338747246522,6,46141,2016-08-1,
1079,Destruction of a polymorphic object with no virtual destructor,clang-tidy,85.92516409141872,1,78299,2013-08-2,
824,Dereference of undefined pointer value,clang-tidy,51.97950382662433,7,18813,2012-09-3,
476,Dereference of null pointer,clang-tidy,41.958733857153696,6,76954,2003-01-0,
1006,Property access,clang-tidy,90.8441721725151,8,74439,2017-02-2,
369,Division by zero,clang-tidy,31.577891462907047,5,83820,2016-06-2,
136,Dynamic and static type mismatch,clang-tidy,43.89310248727879,2,15237,2005-09-0,
704,Generics,clang-tidy,24.678660967375123,4,95492,2009-10-1,
704,Enum cast out of range,clang-tidy,75.1665396748276,5,79774,2016-08-2,
587,Use fixed address,clang-tidy,70.58422056700027,7,29268,2017-07-2,
398,GCD performance anti-pattern,clang-tidy,30.38135984429473,10,60527,2006-08-2,
502,Use of Untrusted Data,clang-tidy,23.087156878447367,1,30904,2019-11-1,
569,Identical expressions in conditional expression,clang-tidy,32.71564866259128,4,513,2019-10-2,
569,Compare of identical expressions,clang-tidy,25.44059579990481,7,91437,2018-09-2,
1041,Identical branches,clang-tidy,49.14571534688111,2,40279,2017-11-1,
1041,Identical conditions,clang-tidy,72.69051106890508,9,75800,2001-12-3,
1041,Identical conditions,clang-tidy,21.817010565467278,2,97256,2004-05-2,
1041,Use of identical expressions,clang-tidy,88.89456719513005,2,4912,2005-12-2,
825,Iterator invalidated,clang-tidy,73.56135709349668,8,71044,2018-02-1,
465,Iterator out of range,clang-tidy,62.2791961375192,8,63696,2016-04-0,
459,Incomplete invalidation,clang-tidy,14.358974238636735,3,41587,2009-03-2,
459,Incomplete invalidation,clang-tidy,9.568420658757182,6,8954,2015-04-2,
459,Incomplete invalidation,clang-tidy,51.970589573518936,5,81509,2001-01-2,
399,AST node allocates heap memory,clang-tidy,9.79173405972582,8,91492,2019-03-1,
398,Plural Misuse,clang-tidy,56.13539334782931,7,3431,2001-09-1,
398,Context Missing,clang-tidy,53.68355547321389,5,89045,2015-09-0,
398,Unlocalizable string,clang-tidy,5.373179361985092,4,27447,2011-05-1,
399,Improper use of SecKeychain API,clang-tidy,0.559325344989059,1,81240,2011-01-1,
1006,Improper use of 'dispatch_once',clang-tidy,1.2366786537347463,6,18517,2006-11-2,
401,Memory leak,clang-tidy,12.62574097133088,10,91221,2016-12-1,
763,Bad free,clang-tidy,69.93657977530867,5,85851,2019-11-0,
399,Use of zero allocated,clang-tidy,0.4587802233603555,9,8687,2008-06-2,
415,Double delete,clang-tidy,98.93891672184648,9,11413,2013-11-1,
415,Double free,clang-tidy,39.88216524014347,10,12018,2000-08-2,
416,Use-after-free,clang-tidy,66.21486601900929,9,90481,2015-08-2,
761,Offset free,clang-tidy,26.968556301878056,4,7950,2018-03-2,
763,Bad deallocator,clang-tidy,6.201986997224851,9,70920,2008-01-1,
590,Free alloca(),clang-tidy,57.62668916621963,10,76131,2008-03-0,
763,Bad free,clang-tidy,23.332538539567004,2,96602,2006-03-0,
789,malloc() size overflow,clang-tidy,91.2798690009764,2,38391,2013-07-0,
131,Allocator sizeof operand mismatch,clang-tidy,67.86188952588573,4,40395,2018-06-0,
399,Use-after-move,clang-tidy,38.152825874062344,9,29048,2016-04-1,
1006,Use -drain instead of -release,clang-tidy,95.52452755176571,9,35982,2019-08-1,
476,CFErrorRef* null dereference,clang-tidy,6.674630972933371,9,1996,2007-05-1,
1006,Bad return type when passing CFErrorRef*,clang-tidy,17.706787391956503,7,13249,2011-07-2,
1006,Bad return type when passing NSError**,clang-tidy,68.77445849725386,1,68957,2018-11-0,
476,Dereference of null pointer,clang-tidy,59.77160184387742,4,83714,2006-06-2,
476,Argument with 'nonnull' attribute passed null,clang-tidy,40.25623204662244,10,60022,2013-03-0,
476,Nullability,clang-tidy,5.251662107574506,6,4151,2007-04-2,
682,Suspicious number object conversion,clang-tidy,62.0885574381999,9,3398,2002-10-1,
704,OSObject C-Style Cast,clang-tidy,74.77416846890723,6,78181,2018-06-1,
662,Nil value used as mutex for @synchronized() (no synchronization will occur),clang-tidy,40.03606770258974,9,76978,2019-11-1,
662,Uninitialized value used as mutex for @synchronized,clang-tidy,97.52560991807823,4,61581,2013-05-0,
465,CFArray API,clang-tidy,59.763979057384894,8,81825,2016-05-0,
1006,Objective-C property misuse,clang-tidy,12.248967393008293,3,41940,2010-07-0,
399,[super dealloc] should not be called more than once,clang-tidy,78.98131260153095,6,93794,2017-02-0,
1164,Unused instance variable,clang-tidy,45.61886477363773,5,74753,2006-11-2,
188,Dangerous pointer arithmetic,clang-tidy,20.669607596915164,8,14747,2015-04-1,
188,Dangerous pointer arithmetic,clang-tidy,37.19521460026799,4,45644,2001-08-0,
465,Iteration of pointer-like elements,clang-tidy,4.391134375302785,1,36557,2007-09-0,
465,Sorting of pointer-like elements,clang-tidy,70.10641141188432,4,11867,2013-11-0,
469,Pointer subtraction,clang-tidy,72.78961071683952,8,84273,2019-05-1,
667,Use destroyed lock,clang-tidy,54.2031818457403,5,19139,2005-11-2,
667,Init invalid lock,clang-tidy,85.42143207465453,6,42653,2016-09-2,
667,Destroy invalid lock,clang-tidy,4.876846727577277,3,5949,2000-08-2,
667,Lock order reversal,clang-tidy,20.176424746275224,9,66478,2001-10-2,
667,Double unlocking,clang-tidy,5.534307042481645,10,51882,2005-08-2,
667,Double locking,clang-tidy,13.319355238755637,2,87948,2015-11-2,
466,Return of pointer value outside of expected range,clang-tidy,39.768255042363144,2,22037,2019-02-2,
465,Returning null reference,clang-tidy,71.7462313989794,5,70725,2000-03-0,
465,Garbage return value,clang-tidy,14.678690809770501,6,46607,2003-09-1,
399,Memory leak inside autorelease pool,clang-tidy,58.88112926059035,9,58025,2017-08-2,
910,Double fclose,clang-tidy,41.01345283834311,9,46281,2010-10-2,
775,Resource Leak,clang-tidy,66.34509469178576,7,27173,2010-05-2,
910,Double fclose,clang-tidy,5.7369133510758346,3,62773,2012-10-2,
628,Illegal whence argument,clang-tidy,11.50493516876907,6,62474,2009-05-0,
476,NULL stream pointer,clang-tidy,30.159881912617557,3,53406,2017-12-0,
19,Tainted data,clang-tidy,50.69457800295017,6,39124,2006-06-0,
369,Division by zero,clang-tidy,1.2850005578258439,9,66752,2009-01-2,
465,Branch condition evaluates to a garbage value,clang-tidy,80.29066465440332,4,43071,2018-04-2,
824,uninitialized variable captured by block,clang-tidy,53.9980411661697,10,60052,2003-11-1,
465,Result of operation is garbage or undefined,clang-tidy,22.37336784951719,4,60522,2008-09-0,
824,Array subscript is undefined,clang-tidy,42.19976050940968,2,49737,2003-03-0,
561,Unreachable code,clang-tidy,15.545675776473345,3,27797,2015-11-1,
789,Dangerous variable-length array (VLA) declaration,clang-tidy,36.74175026201443,1,55165,2015-08-0,
401,Leaked va_list,clang-tidy,90.2816197146571,9,76529,2016-04-3,
824,Uninitialized va_list,clang-tidy,70.906637660139,10,5813,2018-09-1,
399,Dangerous construct in a vforked process,clang-tidy,55.75301398415245,10,83367,2004-10-0,
,ALLOCATION_COMPLEXITY_INCREASE,Infer,94.6897736816433,4,93643,2016-02-1,
,ALLOCATION_COMPLEXITY_INCREASE_COLD_START,Infer,46.20262553413199,4,5209,2003-06-1,
,ANALYSIS_STOPS,Infer,43.75904880257797,6,24963,2017-06-0,
,ARRAY_OUT_OF_BOUNDS_L1,Infer,26.985624665203435,1,90627,2001-09-0,
,ARRAY_OUT_OF_BOUNDS_L2,Infer,2.3000065582671203,4,40414,2010-09-0,
,ARRAY_OUT_OF_BOUNDS_L3,Infer,57.66614744315468,6,82945,2011-04-1,
,Abduction_case_not_implemented,Infer,65.26175518931767,10,61043,2000-09-1,
,Array_of_pointsto,Infer,79.70520593434709,4,53988,2002-06-2,
,Assert_failure,Infer,63.4520738734482,7,74542,2008-10-0,
121,BUFFER_OVERRUN_L1,Infer,1.62117542108553,2,73977,2008-02-1,
121,BUFFER_OVERRUN_L2,Infer,21.282358732699624,6,36784,2019-03-2,
121,BUFFER_OVERRUN_L3,Infer,52.36976826893086,9,56473,2011-10-3,
121,BUFFER_OVERRUN_L4,Infer,10.177986444604969,5,12278,2000-06-0,
121,BUFFER_OVERRUN_L5,Infer,53.97262801679257,6,18806,2004-09-2,
121,BUFFER_OVERRUN_R2,Infer,39.75552791991744,2,98592,2011-05-0,
121,BUFFER_OVERRUN_S2,Infer,84.15534589540987,1,82685,2003-03-3,
121,BUFFER_OVERRUN_U5,Infer,72.4719336452846,6,74983,2018-10-1,
,Bad_footprint,Infer,89.71513248653358,1,18099,2006-10-1,
,CHECKERS_ALLOCATES_MEMORY,Infer,51.275340570796324,4,35460,2011-07-1,
,CHECKERS_ANNOTATION_REACHABILITY_ERROR,Infer,55.32020106117385,4,27555,2007-03-2,
,CHECKERS_CALLS_EXPENSIVE_METHOD,Infer,57.205975986766155,7,82156,2007-08-2,
,CHECKERS_EXPENSIVE_OVERRIDES_UNANNOTATED,Infer,60.808288568113966,10,31339,2012-07-3,
,CHECKERS_FRAGMENT_RETAINS_VIEW,Infer,26.021589611228624,6,27297,2000-09-1,
704,CHECKERS_IMMUTABLE_CAST,Infer,61.17997766822688,8,70205,2013-09-1,
628,CHECKERS_PRINTF_ARGS,Infer,40.44990439958048,10,21717,2017-04-2,
704,CLASS_CAST_EXCEPTION,Infer,62.06630343447436,10,73206,2001-01-1,
,CLASS_LOAD,Infer,22.863900700869564,5,19134,2012-09-2,
1077,COMPARING_FLOAT_FOR_EQUALITY,Infer,37.42068754579868,4,80713,2009-11-1,
,COMPONENT_FACTORY_FUNCTION,Infer,13.466367563831383,6,34906,2005-02-2,
,COMPONENT_FILE_CYCLOMATIC_COMPLEXITY,Infer,30.631556604194166,7,18144,2012-08-2,
,COMPONENT_FILE_LINE_COUNT,Infer,57.36387534196001,10,46996,2008-09-3,
,COMPONENT_INITIALIZER_WITH_SIDE_EFFECTS,Infer,65.35402945831518,9,23195,2001-11-1,
,COMPONENT_WITH_MULTIPLE_FACTORY_METHODS,Infer,9.514946809486736,4,10093,2006-05-1,
,COMPONENT_WITH_UNCONVENTIONAL_SUPERCLASS,Infer,43.74829901843206,7,92977,2001-07-0,
570,CONDITION_ALWAYS_FALSE,Infer,87.5025418121445,6,72841,2000-03-2,
571,CONDITION_ALWAYS_TRUE,Infer,98.92528440379853,2,9614,2014-03-2,
,CREATE_INTENT_FROM_URI,Infer,37.26705449511154,9,72263,2018-07-0,
79,CROSS_SITE_SCRIPTING,Infer,7.089275687979047,9,34997,2009-09-0,
,Cannot_star,Infer,94.9349684047128,1,61778,2011-01-2,
,Codequery,Infer,51.34735286331662,3,59282,2009-08-1,
825,DANGLING_POINTER_DEREFERENCE,Infer,61.80226043309415,9,2483,2009-03-2,
833,DEADLOCK,Infer,85.15942275042843,5,47464,2010-03-1,
563,DEAD_STORE,Infer,98.55909267646737,10,5684,2007-06-2,
590,DEALLOCATE_STACK_VARIABLE,Infer,24.833745844607424,3,49673,2010-06-1,
590,DEALLOCATE_STATIC_MEMORY,Infer,63.95907228122205,3,45264,2012-09-2,
,DEALLOCATION_MISMATCH,Infer,24.412742666609233,1,69689,2008-05-0,
369,DIVIDE_BY_ZERO,Infer,76.69687795314317,6,69205,2019-02-2,
,DO_NOT_REPORT,Infer,72.06683556751446,4,77322,2011-03-1,
,EMPTY_VECTOR_ACCESS,Infer,28.20974401225792,5,51829,2013-07-0,
1041,ERADICATE_CONDITION_REDUNDANT,Infer,29.829669132079072,6,58898,2017-08-2,
,ERADICATE_CONDITION_REDUNDANT_NONNULL,Infer,19.53942799688231,10,10341,2013-12-2,
456,ERADICATE_FIELD_NOT_INITIALIZED,Infer,90.91507052194488,5,34113,2001-12-0,
,ERADICATE_FIELD_NOT_MUTABLE,Infer,97.3508901353528,7,96306,2011-07-1,
,ERADICATE_FIELD_NOT_NULLABLE,Infer,31.40246035233153,6,13893,2002-12-1,
,ERADICATE_FIELD_OVER_ANNOTATED,Infer,57.65767762651593,5,69064,2015-10-1,
,ERADICATE_FIELD_VALUE_ABSENT,Infer,89.66496602926405,9,39773,2000-12-1,
,ERADICATE_INCONSISTENT_SUBCLASS_PARAMETER_ANNOTATION,Infer,23.02430546518297,3,64261,2019-07-0,
,ERADICATE_INCONSISTENT_SUBCLASS_RETURN_ANNOTATION,Infer,1.2420111239887621,3,45289,2019-05-2,
,ERADICATE_NULLABLE_DEREFERENCE,Infer,25.40160516367893,2,28049,2015-07-0,
,ERADICATE_PARAMETER_NOT_NULLABLE,Infer,17.309023627652554,7,90242,2002-03-1,
,ERADICATE_PARAMETER_VALUE_ABSENT,Infer,89.00484770288674,5,71278,2014-07-1,
,ERADICATE_RETURN_NOT_NULLABLE,Infer,34.52739474669563,7,63018,2002-01-3,
,ERADICATE_RETURN_OVER_ANNOTATED,Infer,86.69966876326146,2,34106,2014-09-1,
,ERADICATE_RETURN_VALUE_NOT_PRESENT,Infer,36.23603916811078,3,76879,2009-09-3,
,ERADICATE_VALUE_NOT_PRESENT,Infer,12.75720046810479,9,75761,2008-07-1,
,EXECUTION_TIME_COMPLEXITY_INCREASE,Infer,25.80803132255308,9,90133,2014-02-2,
,EXECUTION_TIME_COMPLEXITY_INCREASE_COLD_START,Infer,30.31765018422019,3,57653,2018-11-0,
,EXPENSIVE_ALLOCATION,Infer,98.84489633137203,9,86169,2007-08-2,
,EXPENSIVE_ALLOCATION_COLD_START,Infer,27.272357817465554,3,28290,2014-09-2,
,EXPENSIVE_EXECUTION_TIME,Infer,14.467821853720919,4,4597,2016-12-2,
,EXPENSIVE_EXECUTION_TIME_COLD_START,Infer,15.552075594122616,8,22696,2010-07-2,
,EXPENSIVE_LOOP_INVARIANT_CALL,Infer,88.30207796077293,2,26613,2008-06-1,
,EXPOSED_INSECURE_INTENT_HANDLING,Infer,27.20818623077004,4,54179,2012-07-1,
,Failure_exe,Infer,88.68856179173818,3,48589,2005-02-2,
,GLOBAL_VARIABLE_INITIALIZED_WITH_FUNCTION_OR_METHOD_CALL,Infer,13.580191097255867,5,51614,2016-04-0,
,GRAPHQL_FIELD_ACCESS,Infer,40.55489939257711,8,44202,2006-12-2,
,GUARDEDBY_VIOLATION,Infer,61.36889612455364,7,40229,2009-06-1,
,INEFFICIENT_KEYSET_ITERATOR,Infer,96.94462444442257,9,49387,2008-10-1,
789,INFERBO_ALLOC_IS_BIG,Infer,91.67823850457599,10,96907,2012-04-0,
789,INFERBO_ALLOC_IS_NEGATIVE,Infer,99.07424687969709,7,43986,2018-02-2,
789,INFERBO_ALLOC_IS_ZERO,Infer,73.66402696013229,8,5558,2002-09-0,
789,INFERBO_ALLOC_MAY_BE_BIG,Infer,76.11192050945876,7,34906,2009-11-1,
789,INFERBO_ALLOC_MAY_BE_NEGATIVE,Infer,38.203674196177126,2,96510,2007-06-0,
789,INFINITE_ALLOCATION,Infer,46.5205160500604,8,77366,2017-03-1,
,INFINITE_EXECUTION_TIME,Infer,5.284762679857047,1,63297,2002-08-1,
,INHERENTLY_DANGEROUS_FUNCTION,Infer,35.67577734633789,1,97484,2006-11-1,
,INSECURE_INTENT_HANDLING,Infer,28.980867891256256,3,45890,2014-09-2,
190,INTEGER_OVERFLOW_L1,Infer,14.044201606078122,7,44607,2007-11-2,
190,INTEGER_OVERFLOW_L2,Infer,93.2353325417124,10,48665,2006-07-2,
190,INTEGER_OVERFLOW_L5,Infer,50.2651238276936,7,76346,2010-12-0,
190,INTEGER_OVERFLOW_R2,Infer,56.59389695051074,6,94594,2008-02-1,
190,INTEGER_OVERFLOW_U5,Infer,54.39489425601926,2,82095,2019-03-2,
,INTERFACE_NOT_THREAD_SAFE,Infer,25.898135971316727,3,12415,2011-03-3,
,INVARIANT_CALL,Infer,63.27565806884095,5,34821,2005-09-2,
,IVAR_NOT_NULL_CHECKED,Infer,59.41107142081,5,54529,2003-02-1,
,Internal_error,Infer,21.8654928563176,10,15742,2007-01-2,
,JAVASCRIPT_INJECTION,Infer,25.06179186078451,1,68857,2000-03-3,
,LOCK_CONSISTENCY_VIOLATION,Infer,85.67361018647478,1,85866,2019-07-0,
,LOGGING_PRIVATE_DATA,Infer,90.43643948709489,6,14720,2009-04-0,
,Leak_after_array_abstraction,Infer,49.12655779741192,9,11756,2014-10-0,
,Leak_in_footprint,Infer,61.30027588073141,8,55409,2009-05-1,
401,MEMORY_LEAK,Infer,13.319425076796353,2,512,2007-10-1,
,MISSING_REQUIRED_PROP,Infer,30.110766444333315,1,61248,2016-08-0,
,MUTABLE_LOCAL_VARIABLE_IN_COMPONENT_FILE,Infer,27.86349432782925,10,77436,2000-07-0,
,Missing_fld,Infer,80.07461051990697,5,54532,2007-12-1,
,NULLSAFE_FIELD_NOT_NULLABLE,Infer,28.312172037734772,10,80401,2002-02-2,
,NULLSAFE_NULLABLE_DEREFERENCE,Infer,30.326499665291006,1,91611,2002-12-1,
476,NULL_DEREFERENCE,Infer,71.00437190998129,10,5867,2003-01-2,
,NULL_TEST_AFTER_DEREFERENCE,Infer,91.5873244797858,10,21723,2008-03-2,
,PARAMETER_NOT_NULL_CHECKED,Infer,98.5397229640175,1,97356,2013-05-2,
,POINTER_SIZE_MISMATCH,Infer,15.66127000829659,5,51343,2003-08-1,
,PRECONDITION_NOT_FOUND,Infer,95.54998285074397,1,10250,2001-03-3,
,PRECONDITION_NOT_MET,Infer,12.01038237757931,6,4979,2017-04-2,
,PREMATURE_NIL_TERMINATION_ARGUMENT,Infer,43.107729933354534,8,76717,2001-07-0,
,PURE_FUNCTION,Infer,84.05140976738487,5,629,2010-05-3,
,QUANDARY_TAINT_ERROR,Infer,17.499952379363016,4,68433,2011-04-2,
,REGISTERED_OBSERVER_BEING_DEALLOCATED,Infer,0.31591141129271305,4,12657,2002-11-2,
402,RESOURCE_LEAK,Infer,83.54750046959201,8,97256,2011-09-1,
,RETAIN_CYCLE,Infer,84.77667167093553,10,52002,2012-03-0,
,RETURN_EXPRESSION_REQUIRED,Infer,23.37499000168983,3,61987,2012-07-3,
,RETURN_STATEMENT_MISSING,Infer,68.34200929791591,3,59019,2015-07-0,
252,RETURN_VALUE_IGNORED,Infer,42.63893365838021,10,89259,2009-08-2,
78,SHELL_INJECTION,Infer,99.39101850384566,9,184,2017-04-0,
78,SHELL_INJECTION_RISK,Infer,71.56017748002016,9,79230,2003-08-0,
,SKIP_FUNCTION,Infer,76.41963985329654,3,81951,2003-07-2,
,SKIP_POINTER_DEREFERENCE,Infer,22.155869619547275,6,37716,2017-06-0,
89,SQL_INJECTION,Infer,68.45071639553633,7,39635,2017-10-1,
89,SQL_INJECTION_RISK,Infer,11.511589202172768,3,71704,2018-04-2,
562,STACK_VARIABLE_ADDRESS_ESCAPE,Infer,84.75116987786882,10,20454,2000-09-1,
,STARVATION,Infer,9.090122983319038,4,53364,2019-12-1,
,STATIC_INITIALIZATION_ORDER_FIASCO,Infer,26.427648334221953,7,17855,2016-12-0,
,STRICT_MODE_VIOLATION,Infer,55.574936841845016,8,46115,2001-02-0,
,Symexec_memory_error,Infer,63.03212097460323,5,43352,2018-09-3,
,TAINTED_BUFFER_ACCESS,Infer,42.504923546418205,6,20888,2019-12-0,
789,TAINTED_MEMORY_ALLOCATION,Infer,75.79366658868169,6,35577,2010-02-1,
362,THREAD_SAFETY_VIOLATION,Infer,83.34836031046663,8,93431,2003-06-3,
,TOPL_ERROR,Infer,26.304627238829458,3,20593,2017-07-1,
,UNARY_MINUS_APPLIED_TO_UNSIGNED_EXPRESSION,Infer,14.161308565914076,10,7134,2009-06-1,
457,UNINITIALIZED_VALUE,Infer,1.4351574298957726,8,51253,2009-05-1,
561,UNREACHABLE_CODE,Infer,65.27026231159985,9,10668,2013-10-2,
,UNSAFE_GUARDED_BY_ACCESS,Infer,1.5355655381798505,10,38831,2003-05-2,
,UNTRUSTED_BUFFER_ACCESS,Infer,37.82145239092206,4,89328,2013-09-2,
502,UNTRUSTED_DESERIALIZATION,Infer,44.304716500677,4,63349,2004-10-1,
,UNTRUSTED_DESERIALIZATION_RISK,Infer,16.212019381338273,9,75806,2013-11-0,
,UNTRUSTED_ENVIRONMENT_CHANGE_RISK,Infer,65.09202727559585,6,51513,2012-05-1,
,UNTRUSTED_FILE,Infer,18.395797493199172,10,99763,2001-01-2,
,UNTRUSTED_FILE_RISK,Infer,52.62856821477111,1,51309,2015-12-1,
789,UNTRUSTED_HEAP_ALLOCATION,Infer,82.34058266760078,6,90129,2007-11-2,
,UNTRUSTED_INTENT_CREATION,Infer,66.31161865946044,9,99422,2018-12-0,
,UNTRUSTED_URL_RISK,Infer,11.047942359889385,7,79633,2004-03-1,
,UNTRUSTED_VARIABLE_LENGTH_ARRAY,Infer,96.37115808000802,1,82182,2012-05-0,
,USER_CONTROLLED_SQL_RISK,Infer,27.41636520535141,3,27379,2009-06-0,
416,USE_AFTER_DELETE,Infer,2.915453104364518,8,85529,2019-11-1,
416,USE_AFTER_FREE,Infer,52.91159797022965,1,13658,2008-08-0,
666,USE_AFTER_LIFETIME,Infer,21.520282199120054,4,92767,2002-10-0,
,Unknown_proc,Infer,32.218106180356784,5,90401,2009-07-2,
,VECTOR_INVALIDATION,Infer,95.04507804419634,10,78258,2015-11-1,
685,Wrong_argument_number,Infer,92.37218323368792,7,61289,2010-06-0,
,ZERO_ALLOCATION,Infer,33.37251594291122,1,5447,2015-08-2,
,ZERO_EXECUTION_TIME,Infer,53.48862013241864,1,37872,2010-09-2,
571,There are identical sub-expressions to the left and to the right of the 'foo' operator.,PVS-Studio,73.16532647675324,6,10095,2000-06-2,
783,Perhaps the '?:' operator works in a different way than it was expected. The '?:' operator has a lower priority than the 'foo' operator.,PVS-Studio,84.13035768223787,3,76980,2007-05-0,
697,This is a nonsensical comparison: pointer < 0.,PVS-Studio,14.72926758364348,3,3116,2000-09-1,
841,It is highly probable that the semicolon ';' is missing after 'return' keyword.,PVS-Studio,10.898896604248598,7,20589,2008-10-1,
770,The 'alloca' function is used inside the loop. This can quickly overflow stack.,PVS-Studio,66.35198378303862,3,6171,2012-11-0,
562,Pointer to local variable 'X' is stored outside the scope of this variable. Such a pointer will become invalid.,PVS-Studio,15.423294710157043,8,82785,2003-12-0,
562,Pointer to local array 'X' is stored outside the scope of this array. Such a pointer will become invalid.,PVS-Studio,25.015039117135206,9,55419,2013-08-3,
480,The use of 'new type(n)' pattern was detected. Probably meant: 'new type[n]'.,PVS-Studio,0.4781622631487181,1,53186,2012-06-1,
703,Exceptions that were raised inside noexcept functions must be wrapped in a try..catch block.,PVS-Studio,69.37437456088875,3,63849,2012-10-1,
686,The 'Foo' function is not expected to receive class-type variable as 'N' actual argument.,PVS-Studio,3.2163685900208905,2,52278,2000-04-2,
467,"The sizeof() operator returns size of the pointer, and not of the array, in given expression.",PVS-Studio,13.352059328049748,4,71822,2008-09-1,
119,A call of the 'Foo' function will lead to a buffer overflow or underflow.,PVS-Studio,83.11854463109141,1,25561,2001-10-1,
676,Use _beginthreadex/_endthreadex functions instead of CreateThread/ExitThread functions.,PVS-Studio,62.91634030592972,3,3410,2008-10-0,
131,Dividing sizeof a pointer by another value. There is a probability of logical error presence.,PVS-Studio,10.365408650829067,1,9764,2014-07-2,
763,The 'delete' operator is applied to non-pointer.,PVS-Studio,95.94803751038529,2,20297,2009-08-2,
571,Consider inspecting an odd expression. Non-null function pointer is compared to null.,PVS-Studio,23.20500692742974,6,88930,2003-11-1,
570,The use of 'if (A) {...} else if (A) {...}' pattern was detected. There is a probability of logical error presence.,PVS-Studio,94.8249754259693,10,20865,2001-09-2,
131,The 'malloc' function allocates strange amount of memory calculated by 'strlen(expr)'. Perhaps the correct variant is strlen(expr) + 1.,PVS-Studio,22.680252625264195,6,515,2017-04-0,
563,The 'x' variable is assigned values twice successively. Perhaps this is a mistake.,PVS-Studio,4.925645073432438,9,22847,2015-02-1,
480,"The comma operator ',' in array index expression.",PVS-Studio,65.25167972267043,7,53140,2008-04-2,
480,"Such expressions using the ',' operator are dangerous. Make sure the expression is correct.",PVS-Studio,93.45881431899504,1,87467,2008-04-2,
690,Dereferencing of the null pointer might take place.,PVS-Studio,28.302436256832163,4,50574,2001-07-2,
691,The 'then' statement is equivalent to the 'else' statement.,PVS-Studio,18.63077238596732,6,65366,2014-10-0,
682,"The code contains the collection of similar blocks. Check items X, Y, Z, ... in lines N1, N2, N3, ...",PVS-Studio,82.99653038102313,2,51184,2014-11-0,
253,The 'strcmp' function returns 0 if corresponding strings are equal. Consider examining the condition for mistakes.,PVS-Studio,36.10145602733039,2,46600,2003-12-1,
351,It is odd that the 'zero' value is assigned to pointer. Probably meant: *ptr = zero.,PVS-Studio,26.03663828959657,10,50075,2015-01-0,
697,It is odd that pointer is compared with the 'zero' value. Probably meant: *ptr != zero.,PVS-Studio,11.95038136437977,9,40070,2004-10-0,
670,Odd semicolon ';' after 'if/for/while' operator.,PVS-Studio,86.86974894936904,8,26395,2008-06-1,
252,The return value of function 'Foo' is required to be utilized.,PVS-Studio,22.934557447124217,3,15289,2006-07-2,
131,It is odd that a sizeof() operator is multiplied by sizeof().,PVS-Studio,25.419945487086093,3,38809,2011-08-1,
480,Consider inspecting the statement of '*pointer++' pattern. Probably meant: '(*pointer)++'.,PVS-Studio,49.307054228293076,10,1012,2002-12-0,
691,It is likely that a wrong variable is being incremented inside the 'for' operator. Consider reviewing 'X'.,PVS-Studio,5.8154393448130115,1,31688,2011-11-0,
691,It is likely that a wrong variable is being compared inside the 'for' operator. Consider reviewing 'X'.,PVS-Studio,41.721786969317456,3,47657,2006-04-1,
691,The variable 'X' is being used for this loop and for the outer loop.,PVS-Studio,6.628372350592793,3,1878,2000-01-0,
682,Be advised that the utilized constant value is represented by an octal form.,PVS-Studio,39.022644278383645,9,48221,2016-08-3,
682,Consider reviewing the correctness of 'X' item's usage.,PVS-Studio,32.067930105088124,10,95776,2014-12-1,
688,Consider inspecting iterators which are being passed as arguments to function 'Foo'.,PVS-Studio,92.77399972028613,9,77482,2017-05-2,
628,Member 'x' should point to string terminated by two 0 characters.,PVS-Studio,58.419758671197094,5,48243,2006-03-0,
628,It is dangerous to print a string into itself.,PVS-Studio,88.66066647891746,2,64616,2002-05-0,
704,Consider inspecting an odd type cast: 'Type1' to ' Type2'.,PVS-Studio,58.59567697877572,3,27691,2016-04-0,
704,It is odd that value 'X' is assigned to the variable 'Y' of HRESULT type.,PVS-Studio,66.2872624160015,1,42829,2005-11-1,
253,It is odd that the value 'X' of HRESULT type is compared with 'Y'.,PVS-Studio,7.983447250111542,4,1783,2013-01-2,
253,Such conditional expression of 'if' statement is incorrect for the HRESULT type value 'Foo'. The SUCCEEDED or FAILED macro should be used instead.,PVS-Studio,29.19593827272906,9,99031,2001-08-0,
665,Member of a class is initialized with itself: 'Foo(Foo)'.,PVS-Studio,49.66394517775203,4,65332,2007-04-1,
571,Expression is always true/false.,PVS-Studio,95.66336660967747,5,3352,2002-09-1,
704,Consider reviewing type casting. TYPE X[][] is not equivalent to TYPE **X.,PVS-Studio,21.499452921803165,8,9349,2006-08-0,
688,The 'first' argument of 'Foo' function is equal to the 'second' argument.,PVS-Studio,32.67171023580513,6,94845,2018-12-0,
682,An odd precise comparison. It's probably better to use a comparison with defined precision: fabs(A - B) < Epsilon or fabs(A - B) > Epsilon.,PVS-Studio,94.1726945534127,10,99678,2004-08-1,
561,The code under this 'case' label is unreachable.,PVS-Studio,30.09720789463244,7,59240,2010-10-3,
480,A bool type variable is being incremented. Perhaps another variable should be incremented instead.,PVS-Studio,60.08244153758069,9,79201,2002-12-0,
762,Incorrect use of smart pointer.,PVS-Studio,41.776564458386524,6,3691,2000-05-1,
191,The expression of the 'A - B > 0' kind will work as 'A != B'.,PVS-Studio,60.14986422303895,3,6093,2011-07-2,
697,The values of different enum types are compared.,PVS-Studio,98.90716824759149,3,92841,2007-09-0,
787,Array overrun is possible.,PVS-Studio,35.62511889907572,3,12504,2004-04-1,
562,Function returns the pointer/reference to temporary local object.,PVS-Studio,60.14862981599892,3,52152,2006-12-1,
481,Suspicious assignment inside the conditional expression of 'if/while/for' statement.,PVS-Studio,84.66559732134627,4,20911,2019-03-1,
571,A part of conditional expression is always true/false.,PVS-Studio,66.03289636963959,9,58370,2014-02-2,
563,It's probably better to assign value to 'foo' variable than to declare it anew.,PVS-Studio,87.37945876090434,9,53316,2016-08-2,
563,It's odd to compare a bool type value with a value of N.,PVS-Studio,4.779680168645717,1,46711,2000-04-1,
670,It is possible that this 'else' branch must apply to the previous 'if' statement.,PVS-Studio,77.0553300725749,9,98874,2013-03-1,
480,The '&' or '|' operator is applied to bool type value. You've probably forgotten to include parentheses or intended to use the '&&' or '||' operator.,PVS-Studio,0.3309519274278694,10,68640,2000-12-3,
544,An empty exception handler. Silent suppression of exceptions can hide the presence of bugs in source code during testing.,PVS-Studio,13.624201799541725,6,630,2006-02-2,
587,The integer constant is converted to pointer. Possibly an error or a bad coding style.,PVS-Studio,11.842613415866532,8,11544,2016-06-1,
758,The modification of a variable is unsequenced relative to another operation on the same variable. This may lead to undefined behavior.,PVS-Studio,84.95812318618982,6,30919,2015-08-0,
131,It's odd that the argument of sizeof() operator is the expression.,PVS-Studio,87.61306247557988,1,87294,2012-12-0,
197,Truncation of constant value.,PVS-Studio,78.9056043257091,8,20268,2000-01-0,
480,The variable is assigned to itself.,PVS-Studio,73.22191099465917,3,63352,2005-06-1,
571,Recurring check. This condition was already verified in previous line.,PVS-Studio,74.54535962343886,1,31194,2006-04-2,
665,It is odd that the object which was created using 'new' operator is immediately cast to another type.,PVS-Studio,16.72646157680886,7,75927,2012-02-0,
457,Uninitialized variable 'Foo' was used. The variable was used to initialize itself.,PVS-Studio,92.31032332163848,10,43955,2015-02-2,
823,The pointer is used simultaneously as an array and as a pointer to single object.,PVS-Studio,46.21982798309663,6,97835,2011-03-1,
628,Function receives an odd argument.,PVS-Studio,28.014765286882394,8,95184,2008-10-0,
686,Incorrect format. Consider checking the N actual argument of the 'Foo' function.,PVS-Studio,38.186922382072694,4,72881,2006-09-2,
478,Label is present inside a switch(). It is possible that these are misprints and 'default:' operator should be used instead.,PVS-Studio,83.8857176605995,10,84794,2018-09-2,
480,An odd bitwise operation detected. Consider verifying it.,PVS-Studio,39.06058567914179,10,72201,2018-02-1,
467,The 'Foo' function receives the pointer and its size as arguments. It is possibly a mistake. Inspect the N argument.,PVS-Studio,97.16838289942716,9,21698,2005-10-1,
843,An odd explicit type casting. Consider verifying it.,PVS-Studio,91.38697787418687,2,79820,2010-07-0,
670,The conditional expressions of the 'if' statements situated alongside each other are identical.,PVS-Studio,7.847980697925272,1,73479,2006-08-0,
787,Consider reviewing the source code which operates the container.,PVS-Studio,62.104709507903834,9,94606,2014-04-1,
783,"The '?:' operator, regardless of its conditional expression, always returns one and the same value.",PVS-Studio,33.66332170241142,1,50449,2001-04-0,
480,The same value is present on both sides of the operator. The expression is incorrect or it can be simplified.,PVS-Studio,17.653682204091325,5,87418,2006-09-1,
762,An attempt to release the memory in which the 'Foo' local variable is stored.,PVS-Studio,85.77890426586855,6,8102,2004-08-0,
415,The 'Foo' function is called twice for deallocation of the same resource.,PVS-Studio,64.6885054431475,1,39737,2016-11-1,
480,"The expression of the 'A =+ B' kind is utilized. Consider reviewing it, as it is possible that 'A += B' was meant.",PVS-Studio,50.38321759416705,3,15878,2002-06-0,
480,"The expression of the 'A =- B' kind is utilized. Consider reviewing it, as it is possible that 'A -= B' was meant.",PVS-Studio,9.87259818616344,10,29743,2019-01-2,
571,Consider inspecting this expression. The expression is excessive or contains a misprint.,PVS-Studio,75.66600152839827,3,18191,2005-06-0,
393,Non-void function should return a value.,PVS-Studio,73.03894516842885,3,21192,2000-03-2,
783,Consider reviewing the expression of the 'A = B == C' kind. The expression is calculated as following: 'A = (B == C)'.,PVS-Studio,20.818077864693873,10,6040,2019-12-2,
823,The pointer steps out of array's bounds.,PVS-Studio,0.8118233512740436,8,19543,2019-12-2,
476,"The pointer was utilized before it was verified against nullptr. Check lines: N1, N2.",PVS-Studio,8.288514789598967,5,39564,2011-11-1,
390,The object was created but it is not being used. The 'throw' keyword could be missing.,PVS-Studio,20.229677093030098,6,40558,2015-07-0,
14,"The compiler could delete the 'memset' function call, which is used to flush 'Foo' buffer. The RtlSecureZeroMemory() function should be used to erase the private data.",PVS-Studio,33.05679779156823,7,38546,2018-03-1,
665,The 'memset/memcpy' function is used to nullify/copy the fields of 'Foo' class. Virtual table pointer will be damaged by this.,PVS-Studio,23.44939111048233,10,14182,2003-05-0,
1079,"The virtual destructor is not present, although the 'Foo' class contains virtual functions.",PVS-Studio,10.286799370672039,7,26193,2000-12-0,
571,Consider inspecting the condition. The 'Foo' pointer is always not equal to NULL.,PVS-Studio,71.86853043094084,8,31636,2015-09-2,
704,An odd implicit type casting.,PVS-Studio,46.580118199139434,6,10608,2003-09-2,
480,Consider inspecting this expression. '<' possibly should be replaced with '<<'.,PVS-Studio,53.201155174250616,1,85292,2007-09-0,
665,"The object was created but it is not being used. If you wish to call constructor, 'this->Foo::Foo(....)' should be used.",PVS-Studio,86.53864107589226,6,52575,2005-08-2,
682,It is odd that the number of iterations in the loop equals to the size of the pointer.,PVS-Studio,54.37601076120112,10,54377,2004-11-3,
682,Consider verifying the expression. An unsigned value is compared to the number - NN.,PVS-Studio,40.67833755525753,8,66427,2009-07-0,
482,Ownerless expression 'Foo'.,PVS-Studio,83.72683461798871,4,32895,2010-06-1,
704,Recurring sequence of explicit type casts.,PVS-Studio,56.888389320945166,2,62639,2016-05-2,
369,Divide or mod by zero.,PVS-Studio,29.357423306895814,5,91143,2018-06-1,
758,Undefined behavior. Check the shift operator.,PVS-Studio,48.00003253075571,9,46812,2002-02-1,
590,The memory allocation and deallocation methods are incompatible.,PVS-Studio,43.5980184642754,8,29153,2012-06-1,
670,An unconditional 'break/continue/return/goto' within a loop.,PVS-Studio,5.226614509974725,1,98618,2004-02-0,
761,Strange pointer arithmetic with 'malloc/new'.,PVS-Studio,84.05108677911385,6,95400,2011-03-0,
824,Uninitialized variable 'Foo' used.,PVS-Studio,30.03350734040279,6,30935,2012-08-2,
704,An odd explicit conversion from 'float *' type to 'double *' type.,PVS-Studio,86.6147828725382,4,50662,2003-01-0,
480,The 'Foo' named constant with the value of 0 is used in the bitwise operation.,PVS-Studio,0.47832936111554814,7,75030,2017-06-0,
480,Consider inspecting the condition. An argument of the '|' bitwise operation always contains a non-zero value.,PVS-Studio,65.36056792166501,4,40277,2015-04-0,
134,"It's dangerous to call the 'Foo' function in such a manner, as the line being passed could contain format specification. The example of the safe code: printf(""%s"", str);",PVS-Studio,78.15711228418557,7,4444,2019-08-2,
480,An array is being utilized as a pointer to single object.,PVS-Studio,31.89795899668709,9,56111,2017-11-1,
682,It's unusual that the expression of sizeof(T)*N kind is being summed with the pointer to T type.,PVS-Studio,93.31396588596225,10,20199,2000-01-2,
835,Consider inspecting the 'for' operator. It's possible that the loop will be executed incorrectly or won't be executed at all.,PVS-Studio,95.74466169593097,7,45440,2004-10-0,
478,Consider inspecting the 'switch' statement. It's possible that the first 'case' operator is missing.,PVS-Studio,68.63826289869863,5,63920,2014-09-2,
416,Consider inspecting the '?:' operator. A temporary object is being created and subsequently destroyed.,PVS-Studio,97.0271642352431,5,51851,2016-04-0,
547,The constant NN is being utilized. The resulting value could be inaccurate. Consider using the M_NN constant from <math.h>.,PVS-Studio,39.122820064415095,9,27256,2017-04-1,
691,Consider inspecting the 'for' operator. Initial and final values of the iterator are the same.,PVS-Studio,94.86457134541938,4,94553,2017-07-1,
483,"Consider checking for misprints. It's possible that ',' should be replaced by ';'.",PVS-Studio,26.51689128594391,10,35596,2015-03-0,
682,Consider inspecting the expression. The argument of sizeof() is the macro which expands to a number.,PVS-Studio,68.19165901492376,4,53305,2012-06-1,
670,"It's possible that the line was commented out improperly, thus altering the program's operation logics.",PVS-Studio,67.83851365247277,10,66959,2019-04-0,
190,Consider inspecting the expression. Bit shifting of the 32-bit value with a subsequent expansion to the 64-bit type.,PVS-Studio,95.19975445445938,4,33240,2004-02-2,
665,The 'malloc' function is used to allocate memory for an array of objects which are classes containing constructors/destructors.,PVS-Studio,94.96595494579606,3,9219,2013-06-2,
30,Consider inspecting the 'Foo' function call. Defining an absolute path to the file or directory is considered a poor style.,PVS-Studio,64.62039790931135,1,25383,2018-04-2,
686,Consider inspecting the NN argument of the 'Foo' function. It is odd that the argument is of the 'T' type.,PVS-Studio,19.968232249920582,7,7534,2010-06-0,
480,Consider inspecting the expression. Probably the '!=' should be used here.,PVS-Studio,88.77156448121688,1,21954,2013-09-2,
783,The priority of the '+' operation is higher than that of the '<<' operation. It's possible that parentheses should be used in the expression.,PVS-Studio,22.097629914730334,8,98800,2007-09-0,
135,Consider inspecting the expression. The length should probably be multiplied by the sizeof(wchar_t).,PVS-Studio,5.280614921653026,7,4543,2009-12-2,
682,The expression was implicitly cast from integer type to real type. Consider utilizing an explicit type cast to avoid overflow or loss of a fractional part.,PVS-Studio,37.301569043367735,7,85582,2014-10-2,
570,Two opposite conditions were encountered. The second condition is always false.,PVS-Studio,90.41465543753876,6,95297,2001-01-0,
665,A terminal null is present inside a string. The '\0xNN' characters were encountered. Probably meant: '\xNN'.,PVS-Studio,51.89793960489399,1,67436,2012-06-2,
685,Consider inspecting the expression for function call. It is possible that one of the closing ')' parentheses was positioned incorrectly.,PVS-Studio,95.30675194871921,4,68427,2017-11-2,
483,The code's operational logic does not correspond with its formatting.,PVS-Studio,56.3740888242711,9,52910,2004-09-1,
704,The buffer size is not a multiple of the element size.,PVS-Studio,96.60158115365115,2,24103,2019-01-1,
197,Saving the function result inside the 'byte' type variable is inappropriate. The significant bits could be lost breaking the program's logic.,PVS-Studio,1.956733319688253,8,99587,2014-04-1,
480,Unusual pointer arithmetic. The value of the 'char' type is being added to the string pointer.,PVS-Studio,53.98157995707372,5,92234,2019-06-2,
664,A suspicious function declaration. It is possible that the T type object was meant to be created.,PVS-Studio,4.930978549997745,4,55075,2016-01-0,
193,"The function call could lead to the buffer overflow. The bounds should not contain the size of the buffer, but a number of characters it can hold.",PVS-Studio,7.61437073970086,9,18001,2007-10-1,
670,Consider inspecting the application's logic. It's possible that 'else' keyword is missing.,PVS-Studio,12.683841001188567,5,99086,2010-09-2,
587,The value of 'A' type is assigned to the pointer of 'B' type.,PVS-Studio,37.94880738881792,1,57497,2017-11-2,
783,Priority of the '&&' operation is higher than that of the '||' operation.,PVS-Studio,73.06106222676652,3,43325,2010-10-0,
561,There are two 'if' statements with identical conditional expressions. The first 'if' statement contains function return. This means that the second 'if' statement is senseless.,PVS-Studio,35.73261963356206,5,71950,2013-12-0,
468,"Type casting operation is utilized 2 times in succession. Next, the '+' operation is executed. Probably meant: (T1)((T2)a + b).",PVS-Studio,14.576635669887228,9,46126,2003-09-2,
682,"An odd operation of the 'sizeof(X)/sizeof(T)' kind is performed, where 'X' is of the 'class' type.",PVS-Studio,83.26161367537391,1,23135,2009-04-1,
480,The operation is executed 3 or more times in succession.,PVS-Studio,58.39868134906777,7,793,2005-09-2,
665,A suspicious string consisting of two parts is used for the initialization. It is possible that a comma is missing.,PVS-Studio,45.43811198867294,10,51841,2019-12-3,
834,The condition of loop is always true/false.,PVS-Studio,92.97254053570938,10,68017,2000-09-0,
480,The strings were concatenated but are not utilized. Consider inspecting the expression.,PVS-Studio,86.53686540119183,6,93404,2017-07-1,
665,Variables are initialized through the call to the same function. It's probably an error or un-optimized code.,PVS-Studio,19.648125350362022,6,20052,2006-04-3,
393,It's odd that this function always returns one and the same value of NN.,PVS-Studio,22.005334968969482,1,10233,2002-09-0,
190,"A value is being subtracted from the unsigned variable. This can result in an overflow. In such a case, the comparison operation can potentially behave unexpectedly.",PVS-Studio,83.63145012787862,5,78758,2019-01-0,
480,The program contains an unused label and a function call: 'CC:AA()'. It's possible that the following was intended: 'CC::AA()'.,PVS-Studio,81.13809421677816,10,90628,2003-07-3,
758,Consider inspecting the loop expression. Different containers are utilized for setting up initial and final values of the iterator.,PVS-Studio,61.19563722990061,1,96094,2015-06-2,
834,Infinite loop is possible. The 'cin.eof()' condition is insufficient to break from the loop. Consider adding the 'cin.fail()' function call to the conditional expression.,PVS-Studio,52.65831064404119,3,1353,2016-06-2,
476,The pointer is being dereferenced on the initialization list before it is verified against null inside the body of the constructor function.,PVS-Studio,12.731549261804975,3,66427,2019-11-2,
805,Consider inspecting NN argument of the function 'Foo'. It is possible that the value does not correspond with the length of a string which was passed with the YY argument.,PVS-Studio,89.16326354636527,7,71781,2000-11-1,
480,The 'throw' operator does not possess any arguments and is not situated within the 'catch' block.,PVS-Studio,21.023463046971248,1,58325,2007-12-1,
571,"There is no sense in testing the pointer against null, as the memory was allocated using the 'new' operator. The exception will be generated in the case of memory allocation error.",PVS-Studio,47.03947456968183,4,55315,2005-06-0,
457,An uninitialized class member is used to initialize another member. Remember that members are initialized in the order of their declarations inside a class.,PVS-Studio,65.00690367382106,7,85626,2018-01-0,
687,It is possible that the 'swap' function interchanges a variable with itself.,PVS-Studio,18.28566163319619,7,6660,2015-08-2,
190,"More than N bits are required to store the value, but the expression evaluates to the T type which can only hold K bits.",PVS-Studio,27.061831869333076,6,59141,2012-12-2,
682,The expression contains a suspicious mix of integer and real types.,PVS-Studio,16.099261254905596,10,10827,2006-12-2,
253,It is incorrect to compare the variable of BOOL type with TRUE.,PVS-Studio,26.535537594365245,3,24810,2001-09-0,
688,An object is used as an argument to its own method. Consider checking the first actual argument of the 'Foo' function.,PVS-Studio,73.43153267835034,3,49948,2006-08-2,
457,The 'X' variable was not initialized. This variable is passed by a reference to the 'Foo' function in which its value will be utilized.,PVS-Studio,7.220453633462642,10,65001,2019-10-2,
401,"The 'delete A, B' expression only destroys the 'A' object. Then the ',' operator returns a resulting value from the right side of the expression.",PVS-Studio,72.63050043891505,5,76914,2013-10-0,
758,The language standard does not define an order in which the 'Foo' functions will be called during evaluation of arguments.,PVS-Studio,58.50694963829866,10,11330,2014-06-2,
190,Consider inspecting the loop expression. It is possible that the 'i' variable should be incremented instead of the 'n' variable.,PVS-Studio,19.951724230348244,6,49728,2013-02-2,
682,A value of variable is not modified. Consider inspecting the expression. It is possible that '1' should be present instead of '0'.,PVS-Studio,44.03257885044339,6,67286,2003-02-0,
480,Consider inspecting the return statement. The expression contains a comma.,PVS-Studio,56.787552197041634,7,92174,2016-03-2,
571,A pattern was detected: A || (A && ...). The expression is excessive or contains a logical error.,PVS-Studio,36.84686971633185,2,66550,2013-11-2,
682,Size of an array calculated by the sizeof() operator was added to a pointer. It is possible that the number of elements should be calculated by sizeof(A)/sizeof(A[0]).,PVS-Studio,72.72189282153924,6,28999,2009-12-0,
404,The destructor of the 'Foo' class is not declared as a virtual. It is possible that a smart pointer will not destroy an object correctly.,PVS-Studio,84.43585318386073,1,63506,2015-08-0,
788,"An inappropriate attempt to append a null character to a string. To determine the length of a string by 'strlen' function correctly, a string ending with a null terminator should be used in the first place.",PVS-Studio,38.40811588910967,3,67069,2011-11-0,
835,Consider inspecting conditional expression of the loop. It is possible that 'i < X.size()' should be used instead of 'X.size()'.,PVS-Studio,49.510950078892066,6,28194,2001-02-2,
571,The condition (ptr - const_value) is only false if the value of a pointer equals a magic constant.,PVS-Studio,16.89680979010796,8,49735,2010-03-0,
670,Range intersections are possible within conditional expressions.,PVS-Studio,76.87535592562918,1,69318,2018-07-0,
670,The 'continue' operator will terminate 'do { ... } while (FALSE)' loop because the condition is always false.,PVS-Studio,72.55395674734055,6,33659,2008-02-1,
682,A number of elements in the allocated array is equal to size of a pointer in bytes.,PVS-Studio,64.4661904338233,4,11506,2009-05-2,
253,"strcmp()-like functions can return not only the values -1, 0 and 1, but any values.",PVS-Studio,42.27904561756668,7,9146,2019-07-1,
481,Consider inspecting the 'foo = bar = baz ? .... : ....' expression. It is possible that 'foo = bar == baz ? .... : ....' should be used here instead.,PVS-Studio,77.15109247021779,3,28748,2008-11-1,
480,Consider inspecting the 'T foo = foo = x;' expression. It is odd that variable is initialized through itself.,PVS-Studio,94.32962844505762,6,29426,2017-04-0,
401,"realloc() possible leak: when realloc() fails in allocating memory, original pointer is lost. Consider assigning realloc() to a temporary pointer.",PVS-Studio,66.6149253742025,8,94238,2013-10-2,
544,Classes should always be derived from std::exception (and alike) as 'public'.,PVS-Studio,34.79284164192941,9,59779,2019-11-2,
571,The 'this == 0' comparison should be avoided - this comparison is always false on newer compilers.,PVS-Studio,4.00007430838023,8,90513,2015-05-2,
691,"It is possible that 'else' block was forgotten or commented out, thus altering the program's operation logics.",PVS-Studio,15.902205147999771,5,68892,2001-07-1,
682,Suspicious division: sizeof(X) / Value. Size of every element in X array does not equal to divisor.,PVS-Studio,43.63543505751824,6,17227,2005-11-1,
758,"Dangerous construction is used: 'm[x] = m.size()', where 'm' is of 'T' class. This may lead to undefined behavior.",PVS-Studio,12.373442823655989,6,40488,2007-04-0,
682,Suspicious comparison found: 'a == b == c'. Remember that 'a == b == c' is not equal to 'a == b && b == c'.,PVS-Studio,49.097546023804405,2,82625,2018-08-1,
835,Be advised that compiler may delete this cycle or make it infinity. Use volatile variable(s) or synchronization primitives to avoid this.,PVS-Studio,3.8115473289920487,9,2335,2002-02-2,
476,The pointer was utilized in the logical expression before it was verified against nullptr in the same logical expression.,PVS-Studio,47.06465451576123,7,84862,2016-01-0,
563,"Variable is not passed into foreach loop by a reference, but its value is changed inside of the loop.",PVS-Studio,88.60962996716152,6,22197,2000-06-0,
691,The 'while' operator has empty body. Suspicious pattern detected.,PVS-Studio,79.52305075067919,5,48785,2010-09-1,
704,Suspicious type conversion: HRESULT -> BOOL (BOOL -> HRESULT).,PVS-Studio,2.8519249814010217,2,99195,2014-05-0,
843,It is suspicious to cast object of base class V to derived class U.,PVS-Studio,6.435807761159973,5,13850,2019-01-0,
665,The VARIANT_BOOL type is utilized incorrectly. The true value (VARIANT_TRUE) is defined as -1.,PVS-Studio,56.0132214116357,4,7865,2019-06-2,
697,An abnormality within similar comparisons. It is possible that a typo is present inside the expression.,PVS-Studio,46.28284357522857,1,82939,2000-01-0,
416,"Function returns a pointer to the internal string buffer of a local object, which will be destroyed.",PVS-Studio,22.319368433088737,10,73314,2009-08-0,
197,Converting integers or pointers to BOOL can lead to a loss of high-order bits. Non-zero value can become 'FALSE'.,PVS-Studio,78.60915755126994,1,97636,2002-07-2,
704,"A dangerous cast of 'this' to 'void*' type in the 'Base' class, as it is followed by a subsequent cast to 'Class' type.",PVS-Studio,7.945641321495223,5,40357,2004-07-1,
761,An attempt to free memory containing the 'int A[10]' array by using the 'free(A)' function.,PVS-Studio,69.73274772886062,7,62405,2012-05-0,
783,Return value of 'wcslen' function is not multiplied by 'sizeof(wchar_t)'.,PVS-Studio,21.240315969594192,1,74428,2019-10-1,
570,An excessive check can be simplified. The '||' operator is surrounded by opposite expressions 'x' and '!x'.,PVS-Studio,14.437106292694956,9,2559,2017-11-0,
457,Not all members of a class are initialized inside the constructor.,PVS-Studio,76.620569177934,3,28351,2004-01-0,
665,The variable of char type is compared with pointer to string.,PVS-Studio,70.09971304334579,5,15795,2014-03-2,
480,Unary minus operator does not modify a bool type value.,PVS-Studio,24.011378901840807,1,31394,2012-11-1,
783,It is possible that macro expansion resulted in incorrect evaluation order.,PVS-Studio,63.44574661343832,9,81472,2009-02-2,
758,The behavior is undefined for arithmetic or comparisons with pointers that do not point to members of the same array.,PVS-Studio,35.67336020743832,2,62771,2016-01-1,
665,"It is possible that ',' comma is missing at the end of the string.",PVS-Studio,15.496782494266803,8,36439,2010-11-1,
672,Temporary anonymous object is used.,PVS-Studio,36.82456834809082,10,11115,2001-02-0,
20,EOF should not be compared with a value of the 'char' type. Consider using the 'int' type.,PVS-Studio,59.258019007230324,1,29350,2017-12-0,
480,"The following pattern is used: throw (a, b);. It is possible that type name was omitted: throw MyException(a, b);.",PVS-Studio,73.093582324612,2,1688,2019-12-3,
170,Function receives an address of a 'char' type variable instead of pointer to a buffer.,PVS-Studio,47.06976493756281,2,29669,2007-06-3,
475,The memory areas must not overlap. Use 'memmove' function.,PVS-Studio,60.47234757719956,5,24371,2010-11-0,
664,Temporary object is immediately destroyed after being created. Consider naming the object.,PVS-Studio,56.83394340401813,9,14225,2018-05-2,
704,A 'wchar_t *' type string is incorrectly converted to 'BSTR' type string.,PVS-Studio,25.234534273893573,2,81181,2006-04-1,
480,An odd expression inside parenthesis. It is possible that a function name is missing.,PVS-Studio,1.1560932067608998,9,5359,2001-01-1,
762,Memory for 'getline' function should be allocated only by 'malloc' or 'realloc' functions. Consider inspecting the first parameter of 'getline' function.,PVS-Studio,4.503478502728909,1,52074,2002-11-1,
675,Destructor of the object will be invoked a second time after leaving the object's scope.,PVS-Studio,47.546246940619916,9,79984,2001-11-2,
788,Creating an object with placement new requires a buffer of large size.,PVS-Studio,87.66309466975883,10,88371,2011-11-1,
682,The '&=' operation always sets a value of 'Foo' variable to zero.,PVS-Studio,91.84532509244633,8,11278,2004-02-1,
123,Copying from unsafe data source. Buffer overflow is possible.,PVS-Studio,47.18607307616847,5,71355,2009-08-1,
690,It is possible that an incorrect variable is compared with null after type conversion using 'dynamic_cast'.,PVS-Studio,65.41653434148257,1,8761,2016-03-1,
416,Reference invalidated because of the destruction of the temporary object returned by the function.,PVS-Studio,69.22899547489354,1,29205,2012-11-1,
703,Violated order of exception handlers. Exception caught by handler for base class.,PVS-Studio,97.53904940959181,5,167,2015-01-1,
670,Consider inspecting virtual function arguments. See NN argument of function 'Foo' in derived class and base class.,PVS-Studio,4.436813504715486,3,29531,2010-09-1,
683,Possible incorrect order of arguments passed to function.,PVS-Studio,49.98344591266005,8,32068,2019-06-2,
682,A compound assignment expression 'X += X + N' is suspicious. Consider inspecting it for a possible error.,PVS-Studio,51.92133037004327,4,37812,2012-08-2,
462,An item with the same key has already been added.,PVS-Studio,49.07496993105032,2,27887,2010-07-0,
571,The variable is of enum type. It is odd that it is used as a variable of a Boolean-type.,PVS-Studio,2.784564063366002,6,54440,2015-07-0,
119,The pointer in the expression equals nullptr. The resulting value is meaningless and should not be used.,PVS-Studio,47.18299506658292,5,58050,2003-04-1,
480,Possible use of a left shift operator instead of a comparison operator.,PVS-Studio,61.00558787171069,8,65179,2001-05-2,
758,Calling the 'delete' operator for a void pointer will cause undefined behavior.,PVS-Studio,82.56674318208434,4,2954,2010-12-2,
775,The function was exited without releasing the pointer/handle. A memory/resource leak is possible.,PVS-Studio,47.80023414421206,1,99307,2016-04-0,
416,The pointer was used after the memory was released.,PVS-Studio,83.66337151374431,4,66295,2008-04-0,
1023,It is odd that the BSTR data type is compared using a relational operator.,PVS-Studio,6.626632572921476,5,65860,2013-09-1,
835,Potentially infinite loop. The variable in the loop exit condition does not change its value between iterations.,PVS-Studio,85.4694567145757,4,7435,2010-08-2,
468,Dangerous widening type conversion from an array of derived-class objects to a base-class pointer.,PVS-Studio,45.0819470520771,6,43420,2007-01-1,
682,"Two similar code fragments were found. Perhaps, this is a typo and 'X' variable should be used instead of 'Y'.",PVS-Studio,25.43250209470641,2,23972,2017-06-1,
561,Unreachable code detected. It is possible that an error is present.,PVS-Studio,79.69038028299026,4,66440,2001-04-2,
789,"The value of the variable is checked after it was used. Perhaps there is a mistake in program logic. Check lines: N1, N2.",PVS-Studio,3.2850815282476797,1,99948,2012-06-1,
469,It is pointless to compute the distance between the elements of different arrays.,PVS-Studio,36.832312044772586,3,21776,2015-06-0,
119,Dereferencing of invalid iterator 'X' might take place.,PVS-Studio,9.750293507410069,8,11046,2002-06-0,
197,The size of the bit mask is less than the size of the first operand. This will cause the loss of the higher bits.,PVS-Studio,98.79644927595477,10,27531,2019-02-0,
691,Constant expression in switch statement.,PVS-Studio,12.029179034588832,2,68669,2012-01-0,
197,"Assigning the value C to the X variable looks suspicious. The value range of the variable: [A, B].",PVS-Studio,97.66831571097555,8,68025,2012-11-0,
457,Review captured variable in lambda expression.,PVS-Studio,41.0164133005393,8,59668,2003-05-1,
672,"Iterators for the container, used in the range-based for loop, become invalid upon a function call.",PVS-Studio,21.413612400099158,1,65288,2009-06-3,
691,The initial value of the index in the nested loop equals 'i'. Consider using 'i + 1' instead.,PVS-Studio,28.0205960000936,10,56248,2018-04-1,
691,The function located to the right of the '|' and '&' operators will be called regardless of the value of the left operand. Consider using '||' and '&&' instead.,PVS-Studio,82.58868775353231,2,97715,2013-08-1,
691,"It is odd that the result of the statement is a part of the condition. Perhaps, this statement should have been compared with something else.",PVS-Studio,14.513017273665286,2,39947,2000-04-1,
484,A 'break' statement is probably missing in a 'switch' statement.,PVS-Studio,98.22890004266687,1,21733,2007-02-0,
253,The function is used as if it returned a bool type. The return value of the function should probably be compared with std::string::npos.,PVS-Studio,81.66094604651339,1,97245,2004-12-1,
789,The size of the dynamic array can be less than the number of elements in the initializer.,PVS-Studio,1.3348809177062493,3,57541,2004-08-1,
563,The variable is assigned but is not used by the end of the function.,PVS-Studio,18.131447603507823,10,64740,2012-03-1,
665,"A class, containing pointers, constructor and destructor, is copied by the automatically generated operator= or copy constructor.",PVS-Studio,1.984205791288185,10,17175,2001-03-1,
628,The pointer was used unsafely after it was verified against nullptr.,PVS-Studio,71.88990252315904,2,66774,2018-12-1,
404,The resource was acquired using 'X' function but was released using incompatible 'Y' function.,PVS-Studio,10.17672824025656,1,37468,2000-04-1,
675,Several shared_ptr objects are initialized by the same pointer. A double memory deallocation will occur.,PVS-Studio,59.61639043391557,2,95850,2005-12-0,
457,The value from the uninitialized optional is used. Probably it is a mistake.,PVS-Studio,24.589621610827848,4,27342,2001-01-0,
691,Consider inspecting the 'for' operator. No more than one iteration of the loop will be performed.,PVS-Studio,18.92886216742411,8,21345,2011-05-2,
665,Check the array initialization. Only the first element is initialized explicitly.,PVS-Studio,81.89518667309274,8,65576,2004-07-0,
20,Unchecked tainted data is used in expression.,PVS-Studio,66.57664411845448,4,71280,2018-11-2,
192,The expression is always false. Overflow check is incorrect.,PVS-Studio,81.35396226286792,4,51633,2010-03-1,
670,Suspicious subexpression in a sequence of similar comparisons.,PVS-Studio,83.65843291100485,1,43087,2019-12-1,
682,Structures with members of real type are compared byte-wise.,PVS-Studio,14.51877604379579,3,6665,2008-06-1,
480,Suspicious simultaneous use of bitwise and logical operators.,PVS-Studio,15.141195336255587,7,59754,2018-07-3,
681,The value is out of range of enum values. This causes unspecified or undefined behavior.,PVS-Studio,50.65467152216513,1,55663,2006-05-2,
416,Variable of the 'string_view' type references a temporary object which will be removed after evaluation of an expression.,PVS-Studio,75.1897628998523,1,11900,2002-07-1,
833,"Usage of a suspicious mutex wrapper. It is probably unused, uninitialized, or already locked.",PVS-Studio,46.98325964562482,5,7223,2010-05-0,
480,Compound assignment expression is used inside condition.,PVS-Studio,72.73654334268551,2,20339,2009-07-0,
772,Function exited without performing epilogue actions. It is possible that there is an error.,PVS-Studio,69.55251325730978,4,8888,2003-10-1,
835,The variable is assigned the same value on several loop iterations.,PVS-Studio,33.14289046079533,9,5989,2001-04-2,
755,An exception was thrown by pointer. Consider throwing it by value instead.,PVS-Studio,57.730175054442675,9,27250,2006-10-1,
460,A pointer without owner is added to the container by the 'emplace_back' method. A memory leak will occur in case of an exception.,PVS-Studio,20.75488590112,1,69617,2002-09-2,
20,"The stream is checked for EOF before reading from it, but is not checked after reading. Potential use of invalid data.",PVS-Studio,63.674321857673,8,11361,2014-01-1,
820,"Rather than creating 'std::unique_lock' to lock on the mutex, a new variable with default value is created.",PVS-Studio,33.182573552002694,8,10112,2003-11-1,
190,The variable is incremented in the loop. Undefined behavior will occur in case of signed integer overflow.,PVS-Studio,46.74396389071537,8,17692,2019-11-0,
704,Pointer to an object of the class is cast to unrelated class.,PVS-Studio,93.32535387211497,3,43965,2011-04-1,
190,"Possible overflow. Consider casting operands, not the result.",PVS-Studio,78.28060889735228,8,15464,2016-06-1,
197,Numeric Truncation Error. Return value of function is written to N-bit variable.,PVS-Studio,67.50331057524002,10,38918,2003-02-1,
843,Pointer is cast to a more strictly aligned pointer type.,PVS-Studio,98.70746304456343,9,89754,2004-06-0,
834,Do not use real-type variables as loop counters.,PVS-Studio,19.839471889417226,1,73119,2002-12-0,
609,Potentially unsafe double-checked locking.,PVS-Studio,80.23468652097138,2,81637,2009-11-3,
691,Two or more case-branches perform the same actions.,PVS-Studio,98.0737533523105,8,18299,2012-04-2,
468,It's odd that a char or string literal is added to a pointer.,PVS-Studio,92.42455858777264,7,70501,2003-12-2,
825,Class member is initialized with dangling reference.,PVS-Studio,25.21978639681234,7,7225,2017-07-0,
1177,"This file is marked with copyleft license, which requires you to open the derived source code.",PVS-Studio,4.714251969446359,1,25384,2012-08-2,
834,Loop break conditions do not depend on the number of iterations.,PVS-Studio,44.00813481394648,5,40702,2006-02-1,
703,The DllMain function throws an exception. Consider wrapping the throw operator in a try..catch block.,PVS-Studio,39.689750481416006,2,52712,2016-11-0,
682,Unsafe usage of the 'bool' and integer types together in the operation '&='.,PVS-Studio,58.4950495569043,10,86228,2019-07-2,
672,Lifetime of the lambda is greater than lifetime of the local variable captured by reference.,PVS-Studio,41.38562431106123,4,26802,2013-02-1,
1164,Variable 'foo' was assigned the same value.,PVS-Studio,31.641284361517318,6,69360,2000-07-1,
457,The uninitialized class member is used when initializing the base class.,PVS-Studio,71.37954635914102,1,20298,2012-11-1,
754,Consider checking for misprints. It's possible that an assigned variable should be checked in the next condition.,PVS-Studio,47.42428879350752,2,92517,2000-11-1,
131,"The 'sizeof' expression returns the size of the container type, not the number of elements. Consider using the 'size()' function.",PVS-Studio,99.67898674474911,7,34711,2017-02-2,
337,Pseudo random sequence is the same at every program run. Consider assigning the seed to a value not known at compile-time.,PVS-Studio,68.2812202395836,10,18823,2017-09-2,
1025,Nonsensical comparison of two different functions' addresses.,PVS-Studio,89.55378765173833,9,67570,2002-01-0,
682,The modulo by 1 operation is meaningless. The result will always be zero.,PVS-Studio,61.238922844090546,1,75744,2008-01-2,
477,Consider using the extended version of the 'foo' function here.,PVS-Studio,43.878420532655596,5,18666,2005-04-1,
477,Consider using the 'Ptr' version of the 'foo' function here.,PVS-Studio,5.5705325409743605,10,29897,2003-01-1,
681,Explicit conversion from 'float/double' type to signed integer type.,PVS-Studio,79.2010959398744,10,17940,2019-10-2,
681,Explicit conversion from 'float/double' type to unsigned integer type.,PVS-Studio,14.308671504661719,9,70130,2019-09-1,
480,This expression can be simplified. One of the operands in the operation equals NN. Probably it is a mistake.,PVS-Studio,47.27426005359764,4,4896,2015-11-1,
407,Cyclomatic complexity: NN. Consider refactoring the 'Foo' function.,PVS-Studio,95.74380973800903,4,17997,2011-09-1,
704,Consider inspecting the correctness of handling the N argument in the 'Foo' function.,PVS-Studio,82.32376143413852,2,31552,2018-07-1,
676,MISRA. The function with the 'abort/exit/getenv/system' name should not be used.,PVS-Studio,64.02012773330705,5,95825,2012-05-2,
676,MISRA. The function with the 'qsort/bsearch' name should not be used.,PVS-Studio,29.79174898435214,6,43992,2014-09-2,
676,MISRA. Memory allocation and deallocation functions should not be used.,PVS-Studio,21.096985410902867,2,36242,2016-06-0,
676,MISRA. The macro with the 'setjmp' name and the function with the 'longjmp' name should not be used.,PVS-Studio,24.194776579751608,3,68000,2004-11-2,
676,MISRA. Unbounded functions performing string operations should not be used.,PVS-Studio,9.04633189196925,9,90315,2012-03-0,
478,MISRA. The 'switch' statement should have 'default' as the last label.,PVS-Studio,63.93317664659632,3,23319,2006-04-2,
571,There are identical sub-expressions to the left and to the right of the 'foo' operator.,PVS-Studio,71.86854035553745,10,11975,2012-06-0,
570,The use of 'if (A) {...} else if (A) {...}' pattern was detected. There is a probability of logical error presence.,PVS-Studio,59.551475423329094,6,15336,2016-12-3,
691,The 'then' statement is equivalent to the 'else' statement.,PVS-Studio,32.64228509809599,7,71979,2003-11-2,
390,The object was created but it is not being used. The 'throw' keyword could be missing.,PVS-Studio,41.73728132887059,2,2420,2018-07-2,
691,Odd semicolon ';' after 'if/for/while' operator.,PVS-Studio,88.43796940098602,6,65428,2004-07-1,
563,The 'x' variable is assigned values twice successively. Perhaps this is a mistake.,PVS-Studio,3.0102519830393804,6,66076,2017-05-0,
393,It's odd that this method always returns one and the same value of NN.,PVS-Studio,65.08374715867508,9,87562,2013-08-0,
252,The return value of function 'Foo' is required to be utilized.,PVS-Studio,27.59999254168406,8,4674,2013-11-2,
570,Two opposite conditions were encountered. The second condition is always false.,PVS-Studio,47.360651667469696,10,10485,2013-04-2,
783,"The '?:' operator, regardless of its conditional expression, always returns one and the same value.",PVS-Studio,90.13318965197057,2,92386,2016-03-2,
691,It is likely that a wrong variable is being incremented inside the 'for' operator. Consider reviewing 'X'.,PVS-Studio,38.00727098722601,8,9904,2018-07-1,
691,It is likely that a wrong variable is being compared inside the 'for' operator. Consider reviewing 'X'.,PVS-Studio,60.548737821546005,2,48569,2003-11-1,
691,The variable 'X' is being used for this loop and for the outer loop.,PVS-Studio,1.6527836602789892,3,63532,2000-03-0,
670,Consider inspecting the application's logic. It's possible that 'else' keyword is missing.,PVS-Studio,80.61743191129597,8,99112,2018-07-1,
697,It is possible that an incorrect variable is compared with null after type conversion using 'as' keyword.,PVS-Studio,33.917630773947934,1,45569,2018-12-0,
670,An unconditional 'break/continue/return/goto' within a loop.,PVS-Studio,98.76398610725607,8,94826,2018-12-1,
561,There are two 'if' statements with identical conditional expressions. The first 'if' statement contains method return. This means that the second 'if' statement is senseless.,PVS-Studio,12.064913824380152,6,52734,2009-02-1,
571,Expression is always true/false.,PVS-Studio,81.04752692286102,6,73266,2002-08-1,
571,Consider inspecting this expression. The expression is excessive or contains a misprint.,PVS-Studio,1.2949479747727644,4,13002,2008-01-0,
682,An odd precise comparison. Consider using a comparison with defined precision: Math.Abs(A - B) < Epsilon or Math.Abs(A - B) > Epsilon.,PVS-Studio,39.22084585871172,5,1255,2004-04-2,
685,Incorrect format. Consider checking the N format items of the 'Foo' function.,PVS-Studio,14.344914427467348,2,46469,2004-10-1,
476,The variable was utilized in the logical expression before it was verified against null in the same logical expression.,PVS-Studio,79.41734786067985,5,59882,2019-12-0,
691,Consider inspecting the 'for' operator. Initial and final values of the iterator are the same.,PVS-Studio,43.73768420404317,5,68131,2002-07-0,
571,Recurring check. This condition was already verified in previous line.,PVS-Studio,49.62617958302054,10,79036,2018-03-1,
835,"Waiting on this expression is unreliable, as compiler may optimize some of the variables. Use volatile variable(s) or synchronization primitives to avoid this.",PVS-Studio,50.61416378790155,3,57756,2018-01-1,
670,It is possible that this 'else' branch must apply to the previous 'if' statement.,PVS-Studio,3.727217449157727,2,75651,2009-07-0,
480,Consider inspecting the expression. Probably the '!=' should be used here.,PVS-Studio,69.95944415571358,7,69685,2002-04-2,
480,Consider inspecting the expression. Probably the '+=' should be used here.,PVS-Studio,87.17965134420758,7,2369,2007-11-1,
480,Consider inspecting the expression. Probably the '-=' should be used here.,PVS-Studio,24.838876562071764,1,44131,2001-07-1,
687,The argument was passed to method several times. It is possible that another argument should be passed instead.,PVS-Studio,43.46195834470401,1,61314,2013-12-2,
39,Consider inspecting the 'Foo' function call. Defining an absolute path to the file or directory is considered a poor style.,PVS-Studio,55.02834463211791,8,32955,2014-04-0,
682,The expression contains a suspicious mix of integer and real types.,PVS-Studio,96.3956143166406,9,45038,2010-11-2,
682,The expression was implicitly cast from integer type to real type. Consider utilizing an explicit type cast to avoid the loss of a fractional part.,PVS-Studio,34.98183993519821,10,70607,2010-07-0,
476,Possible NullReferenceException. The '?.' and '.' operators are used for accessing members of the same object.,PVS-Studio,71.40852211645898,10,24126,2001-05-2,
483,The code's operational logic does not correspond with its formatting.,PVS-Studio,93.50292688299533,1,91132,2006-04-1,
704,An excessive type cast or check. The object is already of the same type.,PVS-Studio,95.2251810730509,8,44000,2001-10-2,
390,The original exception object was swallowed. Stack of original exception could be lost.,PVS-Studio,87.8533388374835,1,39291,2018-09-0,
609,Potentially unsafe double-checked locking. Use volatile variable(s) or synchronization primitives to avoid this.,PVS-Studio,64.15719998365628,3,1554,2007-08-3,
481,Suspicious assignment inside the condition expression of 'if/while/for' operator.,PVS-Studio,17.038444549060237,6,62858,2002-04-1,
682,Consider reviewing the correctness of 'X' item's usage.,PVS-Studio,34.778417851716824,4,24343,2007-07-1,
628,Function receives an odd argument.,PVS-Studio,16.000279474428847,6,66681,2012-10-1,
462,An item with the same key has already been added.,PVS-Studio,87.29422870042863,1,80213,2018-06-0,
682,A value of variable is not modified. Consider inspecting the expression. It is possible that other value should be present instead of '0'.,PVS-Studio,47.98625714745555,8,32784,2009-05-2,
571,A part of conditional expression is always true/false if it is evaluated.,PVS-Studio,50.61837665666008,10,32502,2018-12-2,
369,Division or mod division by zero.,PVS-Studio,22.540839237372634,10,19838,2011-03-1,
683,Possible incorrect order of arguments passed to method.,PVS-Studio,53.516237726311914,8,20144,2015-03-2,
691,"It is possible that 'else' block was forgotten or commented out, thus altering the program's operation logics.",PVS-Studio,16.56115461340024,1,62850,2004-05-2,
670,"It's possible that the line was commented out improperly, thus altering the program's operation logics.",PVS-Studio,44.749986298445485,4,24209,2007-05-1,
457,Uninitialized variables are used when initializing the 'A' variable.,PVS-Studio,99.9902161072296,7,88184,2006-10-2,
571,Comparison with 'double.NaN' is meaningless. Use 'double.IsNaN()' method instead.,PVS-Studio,77.99792603750303,10,83696,2011-02-2,
476,Possible null dereference.,PVS-Studio,77.47142209670318,9,96828,2006-01-0,
563,The 'Thread' object is created but is not started. It is possible that a call to 'Start' method is missing.,PVS-Studio,22.833405126703287,9,75160,2001-04-3,
367,"Unsafe invocation of event, NullReferenceException is possible. Consider assigning event to a local variable before invoking it.",PVS-Studio,44.43287674549447,7,9586,2002-08-0,
665,Initializer of a field marked by [ThreadStatic] attribute will be called once on the first accessing thread. The field will have default value on different threads.,PVS-Studio,25.323650785204432,3,42452,2019-10-2,
833,Unsafe locking on an object.,PVS-Studio,10.14992480647755,8,48407,2016-10-1,
670,Range intersections are possible within conditional expressions.,PVS-Studio,35.700369120046425,4,29915,2014-07-3,
480,The operator evaluates both operands. Perhaps a short-circuit operator should be used instead.,PVS-Studio,32.43696027414772,6,9088,2016-12-0,
476,"The object was used before it was verified against null. Check lines: N1, N2.",PVS-Studio,22.425088945579297,1,37891,2006-10-3,
670,The 'continue' operator will terminate 'do { ... } while (false)' loop because the condition is always false.,PVS-Studio,31.1792959769676,9,32173,2003-09-0,
684,Not all the members of type are serialized inside 'GetObjectData' method.,PVS-Studio,46.223820251854306,1,13849,2018-04-1,
476,NullReferenceException is possible. Unhandled exceptions in destructor lead to termination of runtime.,PVS-Studio,21.72954016012386,7,5309,2012-11-0,
690,The 'a' variable was used after it was assigned through null-conditional operator. NullReferenceException is possible.,PVS-Studio,36.96505701108109,8,52897,2017-06-0,
787,Possibly index is out of bound.,PVS-Studio,32.3798931531265,10,27148,2009-02-0,
684,It is not recommended to return null or throw exceptions from 'ToString()' method.,PVS-Studio,49.74749108990403,5,93030,2010-09-0,
674,Possible infinite recursion.,PVS-Studio,1.9558207098903768,9,81009,2016-06-0,
697,An abnormality within similar comparisons. It is possible that a typo is present inside the expression.,PVS-Studio,23.727930180827727,4,44644,2015-08-2,
190,Consider inspecting the loop expression. It is possible that different variables are used inside initializer and iterator.,PVS-Studio,50.981684942130435,3,39704,2005-06-3,
404,IDisposable object is not disposed before method returns.,PVS-Studio,45.041362977130994,1,96153,2015-02-2,
684,It is not recommended to throw exceptions from 'Equals(object obj)' method.,PVS-Studio,85.60247531595505,5,95403,2018-06-2,
835,Consider inspecting the 'for' operator. It's possible that the loop will be executed incorrectly or won't be executed at all.,PVS-Studio,13.222103327506929,5,75401,2003-09-1,
835,Potentially infinite loop. The variable from the loop exit condition does not change its value between iterations.,PVS-Studio,25.546166616284427,10,43915,2011-08-1,
570,Uppercase (lowercase) string is compared with a different lowercase (uppercase) string.,PVS-Studio,81.48261198277878,6,14295,2007-02-2,
783,Perhaps the '??' operator works in a different way than it was expected. Its priority is lower than priority of other operators in its left part.,PVS-Studio,44.18704376643039,5,6964,2014-09-0,
476,"The object was used after it was verified against null. Check lines: N1, N2.",PVS-Studio,50.51688582513982,8,84490,2017-02-0,
682,"Two similar code fragments were found. Perhaps, this is a typo and 'X' variable should be used instead of 'Y'.",PVS-Studio,37.46385208631986,5,64229,2016-10-2,
665,The field (property) is used before it is initialized in constructor.,PVS-Studio,58.61356652752394,10,10184,2001-07-2,
704,"The expression is checked for compatibility with the type 'A', but is casted to the 'B' type.",PVS-Studio,88.95632451809831,8,47413,2005-03-0,
665,A terminal null is present inside a string. The '\0xNN' characters were encountered. Probably meant: '\xNN'.,PVS-Studio,39.0984601136565,10,80878,2010-06-2,
682,Postfix increment/decrement is senseless because this variable is overwritten.,PVS-Studio,90.66337811646795,7,89508,2016-07-1,
128,Shift by N bits is greater than the size of type.,PVS-Studio,51.280776497169015,8,8681,2014-03-0,
691,The initial value of the index in the nested loop equals 'i'. Consider using 'i + 1' instead.,PVS-Studio,36.550909484995984,5,45693,2012-12-2,
691,Constant expression in switch statement.,PVS-Studio,86.30763716216953,5,69163,2001-10-0,
563,The variable is assigned but is not used by the end of the function.,PVS-Studio,14.134715456468804,3,72253,2001-11-1,
561,Unreachable code detected. It is possible that an error is present.,PVS-Studio,86.79625516736753,4,51310,2006-06-0,
476,Unsafe dereference of a WeakReference target. The object could have been garbage collected before the 'Target' property was accessed.,PVS-Studio,71.16309789447041,9,86768,2019-02-0,
476,Possible null dereference. A method can return default null value.,PVS-Studio,28.65605708816721,2,21878,2011-05-1,
567,Non-atomic modification of volatile variable.,PVS-Studio,97.94284842737447,6,47753,2004-07-1,
476,Casting potential 'null' value to a value type can lead to NullReferenceException.,PVS-Studio,87.10002545246226,2,93268,2004-06-0,
476,Dereferencing the result of 'as' operator can lead to NullReferenceException.,PVS-Studio,70.18687912334444,1,81247,2010-06-0,
369,"Potential division by zero. Variable was used as a divisor before it was compared to zero. Check lines: N1, N2.",PVS-Studio,4.358652793302964,1,69598,2010-11-0,
476,"Potential division by zero. Variable was compared to zero before it was used as a divisor. Check lines: N1, N2.",PVS-Studio,99.72221549232525,4,70112,2018-12-3,
476,Dereferencing the result of null-conditional access operator can lead to NullReferenceException. Consider removing parentheses around null-conditional access expression.,PVS-Studio,90.2750253528485,10,85737,2001-11-1,
682,The 'a % b' expression always evaluates to 0.,PVS-Studio,56.64093402402934,9,55619,2013-03-1,
682,The expression is incorrect or it can be simplified.,PVS-Studio,98.34987243519441,4,43518,2008-04-1,
571,There are identical sub-expressions to the left and to the right of the 'foo' operator.,PVS-Studio,62.086928763270876,1,79378,2019-10-1,
570,The use of 'if (A) {...} else if (A) {...}' pattern was detected. There is a probability of logical error presence.,PVS-Studio,28.484411445422175,10,49181,2016-08-0,
691,The 'then' statement is equivalent to the 'else' statement.,PVS-Studio,60.64550234475452,1,47414,2008-01-1,
390,The object was created but it is not being used. The 'throw' keyword could be missing.,PVS-Studio,0.6765722332003454,4,36404,2016-05-2,
571,Expression is always true/false.,PVS-Studio,51.65083365796015,2,94554,2005-05-1,
690,Potential null dereference.,PVS-Studio,72.77578217459343,2,555,2016-01-2,
628,Function receives an odd argument.,PVS-Studio,73.7061681895881,3,15282,2000-10-2,
252,The return value of function 'Foo' is required to be utilized.,PVS-Studio,79.10624579097704,1,74813,2010-04-2,
682,The expression contains a suspicious mix of integer and real types.,PVS-Studio,41.915701444679875,9,85868,2002-07-1,
783,"The '?:' operator, regardless of its conditional expression, always returns one and the same value.",PVS-Studio,45.84542586138287,10,12595,2015-12-2,
595,"Comparison of arrays, strings, collections by reference. Possibly an equality comparison was intended.",PVS-Studio,22.852946853349486,8,86263,2004-01-1,
393,It's odd that this method always returns one and the same value of NN.,PVS-Studio,38.94394305570196,3,72202,2004-05-0,
480,Consider inspecting the expression. Probably the '!='/'-='/'+=' should be used here.,PVS-Studio,80.91771086049224,1,39369,2012-12-1,
691,Constant expression in switch statement.,PVS-Studio,37.230795699512186,3,20325,2015-12-1,
561,Unreachable code detected. It is possible that an error is present.,PVS-Studio,79.90602137065018,7,64948,2007-02-2,
369,Division or mod division by zero.,PVS-Studio,51.3056318683558,3,6822,2010-02-1,
563,The value is assigned to the 'x' variable but is not used.,PVS-Studio,69.45138102827796,2,47285,2001-03-0,
670,The 'continue' operator will terminate 'do { ... } while (false)' loop because the condition is always false.,PVS-Studio,76.23942621145767,9,1009,2010-07-0,
125,Possibly index is out of bound.,PVS-Studio,78.78047015237009,6,88172,2009-01-0,
683,Possible incorrect order of arguments passed to method.,PVS-Studio,1.7865312081146612,1,50120,2003-03-1,
691,The function located to the right of the '|' and '&' operators will be called regardless of the value of the left operand. Consider using '||' and '&&' instead.,PVS-Studio,69.38352463452956,9,48456,2012-07-1,
691,The variable 'X' is being used for this loop and for the outer loop.,PVS-Studio,81.19717312574565,7,16205,2005-01-0,
462,An item with the same key has already been added.,PVS-Studio,82.4328188501899,8,84935,2006-04-0,
758,Shift by N bits is inconsistent with the size of type.,PVS-Studio,78.12584211033874,5,15025,2000-01-0,
457,The value from the uninitialized optional is used.,PVS-Studio,67.18701454947315,3,56726,2014-04-1,
670,An unconditional 'break/continue/return/goto' within a loop.,PVS-Studio,73.54998612729753,6,78238,2018-12-2,
570,Comparison with 'double.NaN' is meaningless. Use 'double.isNaN()' method instead.,PVS-Studio,51.39267592622143,2,28367,2005-01-2,
561,There are two 'if' statements with identical conditional expressions. The first 'if' statement contains method return. This means that the second 'if' statement is senseless.,PVS-Studio,57.748810313052665,4,65179,2004-08-2,
483,The code's operational logic does not correspond with its formatting.,PVS-Studio,22.687181855129868,10,5253,2016-12-3,
481,Suspicious assignment inside the conditional expression of 'if/while/do...while' statement.,PVS-Studio,82.65560529815968,9,15627,2014-09-1,
704,"The expression is checked for compatibility with type 'A', but is cast to type 'B'.",PVS-Studio,44.731669149879906,10,38841,2013-05-1,
691,Consider inspecting the 'for' operator. Initial and final values of the iterator are the same.,PVS-Studio,78.55676305389235,4,41903,2018-12-3,
682,Postfix increment/decrement is senseless because this variable is overwritten.,PVS-Studio,22.930376766729445,3,71609,2013-09-2,
686,Incorrect format. Consider checking the N format items of the 'Foo' function.,PVS-Studio,89.663391542093,9,34859,2012-06-2,
670,It is possible that this 'else' branch must apply to the previous 'if' statement.,PVS-Studio,55.42076286735196,1,16245,2010-04-1,
480,This expression can be simplified. One of the operands in the operation equals NN. Probably it is a mistake.,PVS-Studio,9.05175373497552,5,41796,2000-02-0,
665,Class initialization cycle is present.,PVS-Studio,43.006832387509554,1,45034,2012-10-2,
584,Use of jump statements in 'finally' block can lead to the loss of unhandled exceptions.,PVS-Studio,10.121672198399345,9,12667,2000-09-1,
486,Classes should not be compared by their name.,PVS-Studio,53.040033219297314,9,43286,2006-02-1,
571,Consider inspecting this expression. The expression is excessive or contains a misprint.,PVS-Studio,91.45962719838258,3,4110,2008-05-2,
1024,Comparing objects of incompatible types.,PVS-Studio,63.4717091618344,10,68451,2004-08-2,
185,"Odd use of special character in regular expression. Possibly, it was intended to be escaped.",PVS-Studio,19.550322438095748,4,54172,2004-04-0,
476,The reference was used before it was verified against null.,PVS-Studio,54.03014552609593,1,52232,2017-03-3,
682,The used constant value is represented by an octal form.,PVS-Studio,12.93207431812392,4,39944,2011-06-0,
674,Possible infinite recursion.,PVS-Studio,0.4595160226209427,9,95370,2010-03-1,
670,Odd semicolon ';' after 'if/foreach' operator.,PVS-Studio,28.43421339948372,4,34869,2003-08-3,
572,Suspicious invocation of Thread.run().,PVS-Studio,6.363936251831137,2,54248,2008-06-2,
691,Two or more case-branches perform the same actions.,PVS-Studio,96.25565545498775,6,68561,2018-03-1,
662,Unsafe synchronization on an object.,PVS-Studio,43.003695963360165,7,70080,2003-01-2,
682,"Two similar code fragments were found. Perhaps, this is a typo and 'X' variable should be used instead of 'Y'.",PVS-Studio,30.647642604227777,3,30910,2006-03-0,
684,It is not recommended to return null or throw exceptions from 'toString' / 'clone' methods.,PVS-Studio,8.067251384034435,8,28110,2007-12-0,
567,Non-atomic modification of volatile variable.,PVS-Studio,22.13710778977569,3,52877,2010-07-1,
684,The signature of method 'X' does not conform to serialization requirements.,PVS-Studio,52.26565614544688,5,24966,2008-04-1,
478,A suspicious label is present inside a switch(). It is possible that these are misprints and 'default:' label should be used instead.,PVS-Studio,41.009169631514695,4,13649,2013-02-2,
129,"Value of variable is checked after use. Potential logical error is present. Check lines: N1, N2.",PVS-Studio,46.31703322542137,2,97181,2007-02-0,
754,Consider checking for misprints. It's possible that an assigned variable should be checked in the next condition.,PVS-Studio,92.74075784269323,4,90186,2003-05-2,
609,Unsafe double-checked locking.,PVS-Studio,18.250674074266016,4,14013,2005-12-0,
697,An abnormality within similar comparisons. It is possible that a typo is present inside the expression.,PVS-Studio,5.840499393549581,9,90175,2011-06-3,
670,Suspicious code formatting. 'else' keyword is probably missing.,PVS-Studio,4.904040701308576,6,73182,2004-10-0,
670,"It's possible that the line was commented out improperly, thus altering the program's operation logics.",PVS-Studio,88.55789060451596,7,62372,2003-04-3,
665,Field 'A' is being used before it was initialized.,PVS-Studio,54.94392528158315,7,58752,2018-12-1,
476,Automatic unboxing of a variable may cause NullPointerException.,PVS-Studio,45.16356598822667,9,24387,2011-01-1,
